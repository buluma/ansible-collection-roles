LoadModule mod_sql.c
LoadModule mod_sql_passwd.c
LoadModule mod_sql_postgres.c

# Basics, some site-specific
ServerName                      "{{ proftpd_welcome }}"
ServerType                      standalone
DefaultServer                   on
{% if ansible_virtualization_type != "docker" %}
DefaultAddress                  {{ ansible_default_ipv4.address }}
{% endif %}
Port                            {{ proftpd_ftp_port }}
Umask                           077
{% if ansible_virtualization_type != "docker" %}
SyslogFacility                  DAEMON
SyslogLevel                     debug
{% else %}
#SyslogFacility                 DAEMON
#SyslogLevel                    debug
{% endif %}
MaxInstances                    30
User                            {{ galaxy_user }}
Group                           {{ galaxy_user }}
DisplayConnect                  /etc/opt/local/proftpd_welcome.txt

# Passive port range for the firewall
PassivePorts                    {{ proftpd_passive_port_low }} {{ proftpd_passive_port_high }}

# Cause every FTP user to be "jailed" (chrooted) into their home directory
DefaultRoot                     ~

# Automatically create home directory if it doesn't exist
CreateHome                      on dirmode 700

# Allow users to overwrite their files
AllowOverwrite                  on

# Allow users to resume interrupted uploads
AllowStoreRestart               on

# Bar use of SITE CHMOD
<Limit SITE_CHMOD>
    DenyAll
</Limit>

# Bar use of RETR (download) since this is not a public file drop
<Limit RETR>
    DenyAll
</Limit>

# Do not authenticate against real (system) users
AuthPAM                         off

# Common SQL authentication options
SQLEngine                       on
SQLPasswordEngine               on
SQLBackend                      postgres
SQLConnectInfo                  {{ galaxy_user }}@localhost:{{ galaxy_db_port }} {{ proftpd_db_user }} {{ proftpd_db_passwd }}
SQLAuthenticate                 users

# Configuration that handles PBKDF2 encryption
# Set up mod_sql to authenticate against the Galaxy database
SQLAuthTypes                    PBKDF2
SQLPasswordPBKDF2               SHA256 10000 24 
SQLPasswordEncoding             base64
 
# For PBKDF2 authentication
# See http://dev.list.galaxyproject.org/ProFTPD-integration-with-Galaxy-td4660295.html
SQLPasswordUserSalt             sql:/GetUserSalt
 
# Define a custom query for lookup that returns a passwd-like entry. Replace 512s with the UID and GID of the user running the Galaxy server
SQLUserInfo                     custom:/LookupGalaxyUser
SQLNamedQuery                   LookupGalaxyUser SELECT "email, (CASE WHEN substring(password from 1 for 6) = 'PBKDF2' THEN substring(password from 38 for 69) ELSE password END) AS password2,{{GALAXY_UID}},{{GALAXY_UID}},'{{proftpd_files_path}}/%U','/bin/bash' FROM galaxy_user WHERE email='%U'"
 
# Define custom query to fetch the password salt
SQLNamedQuery                   GetUserSalt SELECT "(CASE WHEN SUBSTRING (password from 1 for 6) = 'PBKDF2' THEN SUBSTRING (password from 21 for 16) END) AS salt FROM galaxy_user WHERE email='%U'"

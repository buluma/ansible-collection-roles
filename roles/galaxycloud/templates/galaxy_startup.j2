#!/bin/bash

# Galaxy startup script
#
# ELIXIR-ITALY
# INDIGO-DataCloud
# IBIOM-CNR

# Contributors:
# author: Tangaro Marco
# email: ma.tangaro@ibiom.cnr.it

## Uncomment and edit this line to refer to galaxy's path:
GALAXY='{{ galaxy_install_path }}'
timeout=600

#______________________________________
# Load Galaxy environment
echo "Loading Galaxy environment"
cd ${GALAXY}
. ${GALAXY}/.venv/bin/activate

#______________________________________
# Add $HOME/bin and /export/bin to PATH
#Â Allow to install executable in $HOME/bin exploitable by Galaxy
# $HOME and /export are shared on cluster between fe and wn.
echo "Exporting environment variables"
export PATH=$HOME/bin:$PATH
export PATH={{export_dir}}/bin:$PATH

#______________________________________
# Check if Galaxy is running
# 200 galaxy is found
# 302 redirect url is found (when anonymous login is enabled)
function check_galaxy {
  echo 'Check if galaxy is up and running, to avoid unuseful restart'
  galaxy_status=`curl --write-out "%{http_code}\n" --silent --output /dev/null "http://localhost/galaxy"`
  echo 'status: '$galaxy_status
  if [[ $galaxy_status -eq 200 ]] || [[ $galaxy_status -eq 302 ]]; then
    return 0
  else
    return 1
  fi
}

#______________________________________
# CHeck if supervisord is running
function check_supervisord {
  echo 'Check is supervisord is running'
  pgrep 'supervisord' > /dev/null && return 0 || return 1
}

#______________________________________
# Define start function
# (supervisord or systemd/upstart)
function start_galaxy {

  check_galaxy
  ecode=$?

  if [[ $ecode = 0 ]]; then
      echo 'Galaxy is up and running. Avoid to restart'
      exit 0
  else
     echo 'Galaxy unreachable'
     check_supervisord
     scode=$?
     if [[ $scode = 0 ]]; then
         echo 'Supervisord already running'
         echo 'Restarting the Galaxy production environment'
         {{galaxyctl_bin_path}}/galaxyctl Restart galaxy --force -c {{ galaxy_config_file }} -t $timeout
     else
         echo "Starting the Galaxy production environment"
         {{galaxyctl_bin_path}}/galaxyctl startup galaxy -c {{ galaxy_config_file }} -t $timeout
     fi
  fi

}

#______________________________________
# Start Galaxy production environment
start_galaxy

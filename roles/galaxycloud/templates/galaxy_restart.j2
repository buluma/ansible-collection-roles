#!/bin/bash

################################################
#
# Galaxy service manager script
#
# Only galaxy forced restart is implemented now
#
################################################

#______________________________________
# Define restart function
# (supervisord or systemd/upstart)

function restart_galaxy {

  echo "Restarting the Galaxy production environment"

  echo "1. Stop galaxy"
{% if ansible_virtualization_role == "docker" or (ansible_virtualization_role != "docker" and init_type == "supervisord") %}
  supervisorctl stop galaxy:
{% else %}
{% if ansible_os_family == "Debian" and ansible_distribution_version == "14.04" %}
  service galaxy stop
{% else %}
  systemctl stop galaxy.service
{% endif %}
{% endif %}

  echo "2. uWSGI nodes check"
  if [ "$(pidof uwsgi)" ]
  then
  # process was found
  echo "Killing uwsgi residual nodes"
  kill -9 $(pidof uwsgi)
  else
  # process not found
  echo "uWSGI already gracefully stopped"
  fi

  echo "3. Start Galaxy"
{% if ansible_virtualization_role == "docker" or (ansible_virtualization_role != "docker" and init_type == "supervisord") %}
  supervisorctl start galaxy:
{% else %}
{% if ansible_os_family == "Debian" and ansible_distribution_version == "14.04" %}
  service galaxy start
{% else %}
  systemctl start galaxy.service
{% endif %}
{% endif %}

}

#______________________________________
# Restart Galaxy production environment
Restart_galaxy

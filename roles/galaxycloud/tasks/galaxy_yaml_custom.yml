---
#______________________________________
## Edit uWSGI section in galaxy.tyml file
## Galaxy >= release_18.05

- name: '[release_18.**] galaxy.yml configuration'
  command: '{{ galaxy_venv_path }}/bin/python
            {{ galaxy_custom_script_path }}/parse_galaxy_yaml.py
            -c "{{ galaxy_config_file }}"
            -s "{{ item.section }}"
            -o "{{ item.option }}"
            -v "{{ item.value }}"'
  with_items:
    - { section: 'galaxy', option: 'brand', value: '{{ galaxy_instance_description }}' }
    - { section: 'galaxy', option: 'tool_dependency_dir', value: '{{ tool_deps_path }}' }

- name: '[release_18.**] Galaxy user login options'
  command: '{{ galaxy_venv_path }}/bin/python
            {{ galaxy_custom_script_path }}/parse_galaxy_yaml.py
            -c "{{ galaxy_config_file }}"
            -s "{{ item.section }}"
            -o "{{ item.option }}"
            -v "{{ item.value }}"'
  with_items:
    - { section: 'galaxy', option: 'require_login', value: '{{ require_login }}' }
    - { section: 'galaxy', option: 'allow_user_creation', value: '{{ allow_user_creation }}' }
    - { section: 'galaxy', option: 'allow_user_impersonation', value: '{{ allow_user_impersonation }}' }
    - { section: 'galaxy', option: 'new_user_dataset_access_role_default_private', value: '{{ new_user_dataset_access_role_default_private }}' }
  when: item.value|bool

- name: '[release_18.**] Database directory configuration'
  command: '{{ galaxy_venv_path }}/bin/python
            {{ galaxy_custom_script_path }}/parse_galaxy_yaml.py
            -c "{{ galaxy_config_file }}"
            -s "{{ item.section }}"
            -o "{{ item.option }}"
            -v "{{ item.value }}"'
  with_items:
    - { section: 'galaxy', option: 'job_working_directory', value: "{{ galaxy_db_dir }}/job_working_directory" }
    - { section: 'galaxy', option: 'file_path', value: "{{ galaxy_db_dir }}/files" }
    - { section: 'galaxy', option: 'new_file_path', value: "{{ galaxy_db_dir }}/tmp" }
    - { section: 'galaxy', option: 'template_cache_path', value: "{{ galaxy_db_dir }}/compiled_templates" }
    - { section: 'galaxy', option: 'citation_cache_data_dir', value: "{{ galaxy_db_dir }}/citations/data" }
    - { section: 'galaxy', option: 'citation_cache_lock_dir', value: "{{ galaxy_db_dir }}/citations/lock" }
    - { section: 'galaxy', option: 'whoosh_index_dir', value: "{{ galaxy_db_dir }}/whoosh_indexes" }
    - { section: 'galaxy', option: 'object_store_cache_path', value: "{{ galaxy_db_dir }}/object_store_cache" }
    - { section: 'galaxy', option: 'cluster_file_directory', value: "{{ galaxy_db_dir }}/pbs" }
    - { section: 'galaxy', option: 'ftp_upload_dir', value: "{{ galaxy_db_dir }}/ftp" }
  when: galaxy_db_dir != "{{ galaxy_install_path }}/database"

- name: '[release_18.**] Enable and configure Conda'
  command: '{{ galaxy_venv_path }}/bin/python
            {{ galaxy_custom_script_path }}/parse_galaxy_yaml.py
            -c "{{ galaxy_config_file }}"
            -s "{{ item.section }}"
            -o "{{ item.option }}"
            -v "{{ item.value }}"'
  with_items:
    - { section: 'galaxy', option: 'conda_auto_install', value: "true" }
    - { section: 'galaxy', option: 'conda_auto_init', value: "true" }
    - { section: 'galaxy', option: 'conda_prefix', value: '{{ conda_prefix }}' }
    #- { section: 'app:main', option: 'conda_ensure_channels', value: "{{ conda_channels }}" }

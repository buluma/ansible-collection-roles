---

- name: Ensure Hostname is Resolvable
  become: yes
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 localhost {{ ansible_hostname }}"
    regexp: ^127\.0\.0\.1
  when:
    - sansible_gocd_agent_fix_hostname | bool
    - ansible_virtualization_type != "docker"

# Gather EC2 metadata facts
- amazon.aws.ec2_metadata_facts:

- debug:
    msg: "This instance is a t1.micro"
  when: ansible_ec2_instance_type == "t1.micro"

- fail:

# - name: Query AWS for GoCD Server
#   ec2_instance_facts:
#     filters: "{{ sansible_gocd_agent_aws_gocd_server_lookup_filters }}"
#     region: "{{ sansible_gocd_agent_aws_region }}"
#   register: gocd_server_lookup
#   when: sansible_gocd_agent_aws_gocd_server_lookup_filters != {}

- name: Set IP of GoCD server
  set_fact:
    sansible_gocd_agent_server_url: "https://{{ gocd_server_lookup.instances[0].private_ip_address }}:{{ sansible_gocd_agent_port_https }}/go"
  when:
    - gocd_server_lookup is defined
    - gocd_server_lookup.instances | default([]) != []

- name: Create the directories for agent data and binaries for additional agents
  become: yes
  file:
    group: "{{ sansible_gocd_agent_group }}"
    owner: "{{ sansible_gocd_agent_user }}"
    path: "{{ item.1 | replace('[GO-AGENT]', 'go-' + item.0 | string) }}"
    mode: 0644
    state: directory
  loop: "{{
    range(1, sansible_gocd_agent_no_of_agents + 1) |
    product([
      sansible_gocd_agent_work_dir + '/[GO-AGENT]',
      '/var/log/[GO-AGENT]',
      sansible_gocd_agent_work_dir + '/[GO-AGENT]/run'
    ]) |
    list
  }}"

- name: Copy over all config, shell scripts and wrapper configs for additional agents
  become: yes
  copy:
    dest: "{{ sansible_gocd_agent_work_dir }}/go-{{ item.0 }}"
    force: no
    group: "{{ sansible_gocd_agent_group }}"
    owner: "{{ sansible_gocd_agent_user }}"
    mode: 0644
    remote_src: yes
    src: "/usr/share/go-agent/{{ item.1 }}"
  loop: "{{
    range(1, sansible_gocd_agent_no_of_agents + 1) |
    product([
      'bin',
      'wrapper-config',
    ]) |
    list
  }}"

- name: Tweak wrapper.conf location in bin script for additional agents
  become: yes
  replace:
    path: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/bin/go-agent"
    replace: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/wrapper-config/wrapper.conf"
    regexp: /usr/share/go-agent/wrapper-config/wrapper.conf
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"

- name: Tweak /run location in bin script for additional agents
  become: yes
  replace:
    path: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/bin/go-agent"
    replace: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/run"
    regexp: /var/lib/go-agent/run
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"

- name: Tweak naming in bin script for additional agents
  become: yes
  replace:
    path: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/bin/go-agent"
    replace: "go-{{ item }}"
    regexp: "go-agent"
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"

- name: Tweak naming in wrapper config for additional agents
  become: yes
  replace:
    path: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/wrapper-config/wrapper.conf"
    replace: "=go-{{ item }}"
    regexp: "=go-agent"
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"

- name: Tweak /var/lib location in wrapper config for additional agents
  become: yes
  replace:
    path: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/wrapper-config/wrapper.conf"
    replace: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}"
    regexp: "/var/lib/go-agent"
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"

- name: Tweak /var/log location in wrapper config for additional agents
  become: yes
  replace:
    path: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/wrapper-config/wrapper.conf"
    replace: "/var/log/go-{{ item }}"
    regexp: "/var/log/go-agent"
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"

- name: Tweak wrapper config properties for additional agents
  become: yes
  replace:
    path: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/wrapper-config/wrapper.conf"
    replace: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/wrapper-config/wrapper-properties.conf"
    regexp: "\\.\\.\\/wrapper-config\\/wrapper-properties\\.conf"
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"

- name: Ensures wrapper configuration for additional agents
  become: yes
  template:
    dest: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/wrapper-config/wrapper-properties.conf"
    group: "{{ sansible_gocd_agent_group }}"
    owner: "{{ sansible_gocd_agent_user }}"
    mode: 0644
    src: wrapper-properties.conf.j2
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"
  notify: restart go agents

- name: Symlink the wrapper binaries for additional agents
  become: yes
  become_user: "{{ sansible_gocd_agent_user }}"
  file:
    dest: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/wrapper"
    src: /usr/share/go-agent/wrapper
    state: link
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"

- name: Add config folder for agents
  become: yes
  file:
    group: "{{ sansible_gocd_agent_group }}"
    name: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/config"
    owner: "{{ sansible_gocd_agent_user }}"
    mode: 0644
    state: directory
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"
  when: sansible_gocd_agent_auto_register_key is not none

- name: Configure auto registration
  become: yes
  template:
    dest: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/config/autoregister.properties"
    group: "{{ sansible_gocd_agent_group }}"
    owner: "{{ sansible_gocd_agent_user }}"
    src: autoregister.properties.j2
    mode: 0644
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"
  when: sansible_gocd_agent_auto_register_key is not none
  notify: restart go agents

- name: Run install command for additional agents
  become: yes
  command: "{{ sansible_gocd_agent_work_dir }}/go-{{ item }}/bin/go-agent install"
  args:
    creates: "/etc/systemd/system/go-{{ item }}.service"
  register: sansible_gocd_agent_install_cmd_result
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"
  until: sansible_gocd_agent_install_cmd_result is succeeded
  retries: 3
  delay: 5

- name: Ensure startup scripts are registered for SystemD
  become: yes
  systemd:
    daemon_reload: yes
  when: sansible_gocd_agent_install_cmd_result.changed
  tags:
    - skip_ansible_lint

- name: Ensure startup scripts are enabled for SystemD
  become: yes
  systemd:
    enabled: yes
    name: "go-{{ item }}"
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"

- name: Copy secrets from S3
  become: yes
  become_user: "{{ sansible_gocd_agent_user }}"
  aws_s3:
    bucket: "{{ item.s3_path | regex_replace('^s3://([^/]+)/.*', '\\1') }}"
    object: "{{ item.s3_path | regex_replace('^s3://[^/]+(/.*)', '\\1') }}"
    dest: "{{ item.local_path }}"
    mode: get
  with_items: "{{ sansible_gocd_agent_aws_s3_secret_files }}"

- name: Secure secrets from S3
  become: yes
  file:
    group: "{{ sansible_gocd_agent_group }}"
    mode: "{{ item.mode | default(0600) }}"
    owner: "{{ sansible_gocd_agent_user }}"
    path: "{{ item.local_path }}"
  with_items: "{{ sansible_gocd_agent_aws_s3_secret_files }}"

- name: Ensure .aws folder
  become: yes
  file:
    state: directory
    path: "/home/{{ sansible_gocd_agent_user }}/.aws"
    owner: "{{ sansible_gocd_agent_user }}"
    group: "{{ sansible_gocd_agent_group }}"
    mode: 0644
  when: sansible_gocd_agent_aws_profiles != []

- name: Configure AWS credentials
  become: yes
  template:
    dest: "/home/{{ sansible_gocd_agent_user }}/.aws/credentials"
    src: aws/credentials.j2
    mode: 0644
  when: sansible_gocd_agent_aws_profiles != []

- name: Configure SSH
  become: yes
  copy:
    src: ssh_config
    dest: "/home/{{ sansible_gocd_agent_user }}/.ssh/config"
    group: "{{ sansible_gocd_agent_group }}"
    owner: "{{ sansible_gocd_agent_user }}"
    mode: 0600

- name: Configure SSH agent setup in bash profile
  become: yes
  template:
    src: .bashrc.j2
    dest: "/home/{{ sansible_gocd_agent_user }}/.bashrc"
    group: "{{ sansible_gocd_agent_group }}"
    owner: "{{ sansible_gocd_agent_user }}"
    mode: 0644

- name: Configure Git for Go CD user
  become: yes
  become_user: "{{ sansible_gocd_agent_user }}"
  template:
    dest: "/home/{{ sansible_gocd_agent_user }}/.gitconfig"
    src: gitconfig.j2
    mode: 0644

- name: Ensure all the agents are started
  become: yes
  service:
    name: "go-{{ item }}"
    state: started
  loop: "{{ range(1, sansible_gocd_agent_no_of_agents + 1) | list }}"
  when: sansible_gocd_agent_start_on_boot

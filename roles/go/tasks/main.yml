---
# tasks file for go

- name: import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: configure alpine
  block:
    - name: create lib64 directory
      ansible.builtin.file:
        path: /lib64
        state: directory
        mode: "0555"

    - name: link libc to lib64 directory
      ansible.builtin.file:
        src: /lib/libc.musl-x86_64.so.1
        dest: /lib64/ld-linux-x86-64.so.2
        state: link
        mode: "0755"
  when:
    - ansible_distribution == "Alpine"

- name: install requirements
  ansible.builtin.package:
    name: "{{ go_requirements }}"
    state: present

- name: unpack go
  ansible.builtin.unarchive:
    src: "{{ go_src }}"
    dest: "{{ go_destination }}"
    remote_src: yes
    creates: "{{ go_destination }}/go/bin"
    mode: "0755"

- name: add go_destination to path variable
  ansible.builtin.template:
    src: go.sh.j2
    dest: "/etc/profile.d/{{ item }}"
    mode: "644"
  loop:
    - go.sh
    - go.csh

- name: link go to a location in PATH
  ansible.builtin.file:
    src: "{{ go_destination }}/go/bin/go"
    dest: /usr/bin/go
    state: link
    mode: "0755"

- name: configure go packages
  block:
    - name: create go_path bin directory
      ansible.builtin.file:
        path: "{{ go_path }}/bin"
        state: directory
        mode: "0755"

    - name: get requested packages
      ansible.builtin.command:
        cmd: "go get {{ item }}"
        creates: "{{ go_path }}/src/{{ item }}"
      loop: "{{ go_packages }}"
      environment:
        GOPATH: "{{ go_path }}"
        GO111MODULE: off

    - name: install requested packages
      ansible.builtin.command:
        cmd: make install
        chdir: "{{ go_path }}/src/{{ item }}"
        creates: "{{ go_path }}/bin/{{ item | basename }}"
      loop: "{{ go_packages }}"
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ go_destination }}/go/bin"
  when:
    - go_packages is defined

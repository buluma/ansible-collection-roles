---
# tasks file for drush

- name: import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: true
  delegate_to: localhost

# Pretasks
- name: update apt cache.
  ansible.builtin.apt: update_cache=true cache_valid_time=600
  when: ansible_os_family == 'Debian'

- name: ensure unzip is installed.
  ansible.builtin.package: name=unzip state=present

- name: install drush launcher.
  block:
    - name: check current state.
      ansible.builtin.stat:
        path: "{{ drush_launcher_path }}"
      register: drush_path_state

    - name: perform cleanup of old symlink.
      ansible.builtin.file:
        path: "{{ drush_launcher_path }}"
        state: absent
      when: drush_path_state.stat.islnk is defined and drush_path_state.stat.islnk

    - name: ensure Drush path directory exists.
      ansible.builtin.file:
        path: "{{ drush_launcher_path | dirname }}"
        state: directory
        mode: 0755

    - name: install drush.
      ansible.builtin.get_url:
        url: "{{ drush_launcher_phar_url }}"
        dest: "{{ drush_launcher_path }}"
        mode: 0755

    - name: ensure drush is executable.
      ansible.builtin.file:
        path: "{{ drush_launcher_path }}"
        mode: 0755
  when: drush_launcher_install

# Install Drush Composer
- name: install drush composer.
  block:
    # Use manual composer tasks until Ansible 2.10.4 is released.
    # - name: Ensure Drush is installed globally via Composer.
    #   ansible.builtin.command: "{{ composer_path }} global require drush/drush:{{ drush_composer_version }}"
    #   register: drush_composer_require
    #   changed_when: "'Nothing to install' not in drush_composer_require.stderr"
    #
    # - name: Update global Drush install if configured.
    #   ansible.builtin.command: "{{ composer_path }} global update drush/drush --with-dependencies"
    #   changed_when: "'Nothing to install' not in drush_composer_require.stderr"
    #   register: tasky
    #   when:
    #     - drush_composer_update
    #     - not drush_composer_require.changed
    #   tags: ['skip_ansible_lint']

    # Switch back to these tasks after Ansible 2.10.4 is released.
    - name: ensure Drush is installed globally via Composer.
      composer:
        command: require
        global_command: true
        arguments: "drush/drush:{{ drush_composer_version }}"
      register: drush_composer_require

    - name: update global Drush install if configured.
      composer:
        command: update
        global_command: true
        arguments: "drush/drush --with-dependencies"
      when:
        - drush_composer_update
        - not drush_composer_require.changed
      tags: ['skip_ansible_lint']

    - name: ensure globally-installed Drush is symlinked into bin dir.
      ansible.builtin.file:  # noqa 208
        src: "{{ drush_composer_global_bin_path }}/drush"
        dest: "{{ drush_composer_path }}"
        state: link
  when: drush_composer_global_install

# Install Drush Source
- name: install drush source.
  block:
    - name: clone Drush from GitHub.
      ansible.builtin.git:
        repo: https://github.com/drush-ops/drush.git
        dest: "{{ drush_source_install_path }}"
        version: "{{ drush_source_install_version }}"
        update: "{{ drush_keep_updated }}"
        force: "{{ drush_force_update }}"
        depth: "{{ drush_clone_depth }}"
      register: drush_clone

    - name: check for composer.json
      ansible.builtin.stat: path={{ drush_source_install_path }}/composer.json
      register: drush_composer

    - name: ensure Drush can be installed on Debian Wheezy.
      ansible.builtin.command: >
        {{ composer_path }} update {{ drush_composer_cli_options }}
        chdir={{ drush_source_install_path }}
      when:
        - drush_clone.changed and ansible_distribution == "Debian"
        - ansible_distribution_release == "wheezy"
        - drush_composer.stat.exists
      tags: ['skip_ansible_lint']

    - name: install Drush dependencies with Composer.
      ansible.builtin.command: >
        {{ composer_path }} install {{ drush_composer_cli_options }}
        chdir={{ drush_source_install_path }}
      when: (drush_clone.changed and drush_composer.stat.exists) or drush_force_composer_install
      tags: ['skip_ansible_lint']

    - name: create drush symlink.
      ansible.builtin.file:  # noqa 208
        src: "{{ drush_source_install_path }}/drush"
        dest: "{{ drush_source_install_bin_path }}"
        state: link
        force: true

    - name: run drush to finish setting it up.
      ansible.builtin.command: "{{ drush_source_install_bin_path }}"
      register: drush_result
      changed_when: "'Execute a drush command' not in drush_result.stdout"
      become: false
  when: drush_install_from_source

---
- name: 4.1.1.1 Ensure auditd is installed (Scored)
  ansible.builtin.package:
    name: audit
    state: present
  when:
    - cis_auditd_installed | bool

- name: 4.1.1.2 Ensure auditd service is enabled (Scored)
  ansible.builtin.service:
    name: auditd
    state: started
    enabled: yes
  when:
    - cis_auditd_service_enabled | bool

- name: 4.1.1.3 Ensure auditing for processes that start prior to auditd is enabled (Scored)
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX="((:?(?!audit=1).)*?)"$'
    replace: 'GRUB_CMDLINE_LINUX="\1 audit=1"'
    validate: /bin/sh %s
    mode: "0644"
  notify:
    - run grub2-mkconfig
  when:
    - cis_auditing_processes_prior_start | bool

- name: 4.1.1.4 Ensure audit_backlog_limit is sufficient (Scored)
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX="((:?(?!audit_backlog_limit=.*).)*?)"$'
    replace: 'GRUB_CMDLINE_LINUX="\1 audit_backlog_limit=8192"'
    validate: /bin/sh %s
    mode: "0644"
  notify:
    - run grub2-mkconfig
  when:
    - cis_audit_backlog_limit_sufficient | bool

- name: 4.1.2.1 Ensure audit log storage size is configured (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    mode: "0640"
    regexp: '^max_log_file = '
    line: "max_log_file = {{ cis_audit_log_storage_size }}"
  notify:
    - restart auditd
  when:
    - cis_audit_log_storage_size_configured | bool

- name: 4.1.2.2 Ensure audit logs are not automatically deleted (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    regexp: '^max_log_file_action = '
    line: "max_log_file_action = keep_logs"
  notify:
    - restart auditd
  when:
    - cis_audit_logs_no_automatically_deleted | bool

- name: 4.1.2.3 Ensure system is disabled when audit logs are full (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    regexp: '^space_left_action = '
    line: "space_left_action = email"
  notify:
    - restart auditd
  when:
    - cis_system_disabled_audit_logs_full | bool

- name: 4.1.2.3 Ensure system is disabled when audit logs are full (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    regexp: '^action_mail_acct = '
    line: "action_mail_acct = root"
  notify:
    - restart auditd
  when:
    - cis_system_disabled_audit_logs_full | bool

- name: 4.1.2.3 Ensure system is disabled when audit logs are full (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    regexp: '^admin_space_left_action = '
    line: "admin_space_left_action = halt"
  notify:
    - restart auditd
  when:
    - cis_system_disabled_audit_logs_full | bool

- name: 4.1.3 Ensure changes to system administration scope (sudoers) is collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/scope.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -w /etc/sudoers -p wa -k scope
    - -w /etc/sudoers.d/ -p wa -k scope
  notify:
    - run augenrules
  when:
    - cis_changed_to_system_administrator_scope_collected | bool

- name: 4.1.4 Ensure login and logout events are collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/audit.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -w /var/log/faillog -p wa -k logins
    - -w /var/log/lastlog -p wa -k logins
  notify:
    - run augenrules
  when:
    - cis_login_and_login_events_collected | bool

- name: 4.1.5 Ensure session initiation information is collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/logins.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -w /var/run/utmp -p wa -k session
    - -w /var/run/wtmp -p wa -k logins
    - -w /var/run/btmp -p wa -k logins
  notify:
    - run augenrules
  when:
    - cis_session_initiation_information_collected | bool

- name: 4.1.6 Ensure events that modify date and time information are collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/time-change.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
    - -a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
    - -a always,exit -F arch=b64 -S clock_settime -k time-change
    - -a always,exit -F arch=b32 -S clock_settime -k time-change
    - -w /etc/localtime -p wa -k time-change
  notify:
    - run augenrules
  when:
    - cis_events_modify_time_and_date_collected | bool

- name: 4.1.7 Ensure events that modify the system's Mandatory Access Controls are collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/MAC-policy.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -w /etc/selinux/ -p wa -k MAC-policy
    - -w /usr/share/selinux/ -p wa -k MAC-policy
  notify:
    - run augenrules
  when:
    - cis_events_modifying_mac_collected | bool

- name: 4.1.8 Ensure events that modify the system's network environment are collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/system-locale.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale
    - -a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale
    - -w /etc/issue -p wa -k system-locale
    - -w /etc/issue.net -p wa -k system-locale
    - -w /etc/hosts -p wa -k system-locale
    - -w /etc/sysconfig/network -p wa -k system-locale
  notify:
    - run augenrules
  when:
    - cis_events_modifying_systems_network_collected | bool

- name: 4.1.9 Ensure discretionary access control permission modification events are collected (Scored)
  ansible.builtin.command:
    cmd: awk '/^\s*UID_MIN/{print $2}' /etc/login.defs
  register: cis_dac_permission_modification_collected_test_one
  changed_when: no
  when:
    - cis_dac_permission_modification_collected | bool

- name: 4.1.9 Ensure discretionary access control permission modification events are collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/perm-mod.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>={{ cis_dac_permission_modification_collected_test_one.stdout }} -F auid!=4294967295 -k perm_mod  # noqa 204 This line is just very long.
    - -a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>={{ cis_dac_permission_modification_collected_test_one.stdout }} -F auid!=4294967295 -k perm_mod  # noqa 204 This line is just very long.
    - -a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>={{ cis_dac_permission_modification_collected_test_one.stdout }} -F auid!=4294967295 -k perm_mod  # noqa 204 This line is just very long.
    - -a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>={{ cis_dac_permission_modification_collected_test_one.stdout }} -F auid!=4294967295 -k perm_mod  # noqa 204 This line is just very long.
    - -a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>={{ cis_dac_permission_modification_collected_test_one.stdout }} -F auid!=4294967295 -k perm_mod  # noqa 204 This line is just very long.
    - -a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>={{ cis_dac_permission_modification_collected_test_one.stdout }} -F auid!=4294967295 -k perm_mod  # noqa 204 This line is just very long.
  notify:
    - run augenrules
  when:
    - cis_dac_permission_modification_collected | bool

- name: 4.1.10 Ensure unsuccessful unauthorized file access attempts are collected (Scored)
  ansible.builtin.command:
    cmd: awk '/^\s*UID_MIN/{print $2}' /etc/login.defs
  register: cis_unsuccessful_files_access_collected_test_one
  changed_when: no
  when:
    - cis_unsuccessful_files_access_collected | bool

- name: 4.1.10 Ensure unsuccessful unauthorized file access attempts are collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/access.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>={{ cis_unsuccessful_files_access_collected_test_one.stdout }} -F auid!=4294967295 -k access  # noqa 204 This line is just very long.
    - -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>={{ cis_unsuccessful_files_access_collected_test_one.stdout }} -F auid!=4294967295 -k access  # noqa 204 This line is just very long.
    - -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>={{ cis_unsuccessful_files_access_collected_test_one.stdout }} -F auid!=4294967295 -k access  # noqa 204 This line is just very long.
    - -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>={{ cis_unsuccessful_files_access_collected_test_one.stdout }} -F auid!=4294967295 -k access  # noqa 204 This line is just very long.
  notify:
    - run augenrules
  when:
    - cis_unsuccessful_files_access_collected | bool

- name: 4.1.11 Ensure events that modify user/group information are collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/identity.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -w /etc/passwd -p wa -k identity
    - -w /etc/group -p wa -k identity
    - -w /etc/gshadow -p wa -k identity
    - -w /etc/shadow -p wa -k identity
    - -w /etc/security/opasswd -p wa -k identity
  notify:
    - run augenrules
  when:
    - cis_events_modifying_user_group_collected | bool

- name: 4.1.12 Ensure successful file system mounts are collected (Scored)
  ansible.builtin.command:
    cmd: awk '/^\s*UID_MIN/{print $2}' /etc/login.defs
  register: cis_successful_mounts_collected_test_one
  changed_when: no
  when:
    - cis_successful_mounts_collected | bool

- name: 4.1.12 Ensure successful file system mounts are collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/mounts.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -a always,exit -F arch=b64 -S mount -F auid>={{ cis_successful_mounts_collected_test_one.stdout }} -F auid!=4294967295 -k mounts
    - -a always,exit -F arch=b32 -S mount -F auid>={{ cis_successful_mounts_collected_test_one.stdout }} -F auid!=4294967295 -k mounts
  notify:
    - run augenrules
  when:
    - cis_successful_mounts_collected | bool

- name: 4.1.13 Ensure use of privileged commands is collected (Scored)
  ansible.builtin.command:
    cmd: awk '/^\s*UID_MIN/{print $2}' /etc/login.defs
  register: cis_privileged_commands_collected_test_one
  changed_when: no
  when:
    - cis_privileged_commands_collected | bool

- name: 4.1.13 Ensure use of privileged commands is collected (Scored)
  ansible.builtin.command:
    cmd: find {{ item }} -xdev \( -perm -4000 -o -perm -2000 \) -type f
  register: cis_privileged_commands_collected_test_two
  changed_when: no
  loop: "{{ cis_privileged_commands_collected_partitions }}"
  when:
    - cis_privileged_commands_collected | bool

- name: 4.1.13 Ensure use of privileged commands is collected (Scored)
  ansible.builtin.include_tasks:
    file: 4_1_13.yml
  loop: "{{ cis_privileged_commands_collected_test_two.results }}"
  loop_control:
    label: "{{ item.stdout }}"

- name: 4.1.14 Ensure file deletion events by users are collected (Scored)
  ansible.builtin.command:
    cmd: awk '/^\s*UID_MIN/{print $2}' /etc/login.defs
  register: cis_file_deletion_users_collected_test_one
  changed_when: no
  when:
    - cis_file_deletion_users_collected | bool

- name: 4.1.14 Ensure file deletion events by users are collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/delete.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>={{ cis_file_deletion_users_collected_test_one.stdout }} -F auid!=4294967295 -k delete  # noqa 204 This line is just very long.
    - -a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>={{ cis_file_deletion_users_collected_test_one.stdout }} -F auid!=4294967295 -k delete  # noqa 204 This line is just very long.
  notify:
    - run augenrules
  when:
    - cis_file_deletion_users_collected | bool

- name: 4.1.15 Ensure kernel module loading and unloading is collected (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/modules.rules
    create: yes
    mode: "0600"
    line: "{{ item }}"
  loop:
    - -w /sbin/insmod -p x -k modules
    - -w /sbin/rmmod -p x -k modules
    - -w /sbin/modprobe -p x -k modules
    - -a always,exit -F arch=b64 -S init_module -S delete_module -k modules
  notify:
    - run augenrules
  when:
    - cis_kernel_module_loading_unloading_collected | bool

# - name: 4.1.16 Ensure system administrator actions (sudolog) are collected (Scored)
#   # There commands described in the CIS_CentOS_Linux_8_Benchmark_v1.0.0 do now work.
#   # Sudo is not configured to use syslog, syslog is not configured to save details
#   # to /var/log/sudo.log.
#   when:
#     - cis_system_administrator_actions_collected | bool

- name: 4.1.17 Ensure the audit configuration is immutable (Scored)
  ansible.builtin.lineinfile:
    path: /etc/audit/rules.d/99-finalize.rules
    create: yes
    mode: "0600"
    line: "-e 2"
  notify:
    - run augenrules
  when:
    - cis_audit_configuration_immutable | bool

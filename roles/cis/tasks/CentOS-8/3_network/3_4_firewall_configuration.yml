---
- name: 3.4.1.1 Ensure a Firewall package is installed (Scored)
  ansible.builtin.package:
    name: "{{ cis_firewall_package }}"
    state: present
  when:
    - cis_firewall_package_installed | bool

- name: 3.4.2.1 Ensure firewalld service is enabled and running (Scored)
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: yes
  when:
    - cis_firewalld_enabled_and_running | bool

- name: 3.4.2.2 Ensure nftables is not enabled (Scored)
  ansible.builtin.service:
    name: nftables
    state: stopped
    enabled: no
    masked: yes
  when:
    - cis_nftables_not_enabled | bool

- name: 3.4.2.3 Ensure default zone is set (Scored)
  ansible.builtin.command:
    cmd: firewall-cmd --set-default-zone={{ cis_default_zone }}
  register: cis_default_zone_set_test
  changed_when:
    - "'ZONE_ALREADY_SET' not in cis_default_zone_set_test.stderr"
  when:
    - cis_default_zone_set | bool

- name: 3.4.2.4 Ensure network interfaces are assigned to appropriate zone (Not Scored)
  ansible.posix.firewalld:
    zone: "{{ item.zone }}"
    interface: "{{ item.interface }}"
    permanent: yes
    state: enabled
  loop: "{{ cis_firewalld_zone_interface_mapping }}"
  when:
    - cis_firewalld_network_interface_assigned_zones | bool

- name: 3.4.2.5 Ensure unnecessary services and ports are not accepted (Not Scored)
  ansible.posix.firewalld:
    service: "{{ item }}"
    permanent: yes
    state: disabled
  loop: "{{ cis_unnecessary_services }}"
  when:
    - cis_unnecessary_services_ports_not_accepted | bool
    - cis_unnecessary_services is defined

- name: 3.4.2.5 Ensure unnecessary services and ports are not accepted (Not Scored)
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: yes
    state: disabled
  loop: "{{ cis_unnecessary_ports }}"
  when:
    - cis_unnecessary_services_ports_not_accepted | bool
    - cis_unnecessary_ports is defined

- name: 3.4.2.6 Ensure iptables is not enabled (Scored)
  ansible.builtin.service:
    name: iptables
    state: stopped
    masked: yes
    enabled: no
  when:
    - cis_iptables_not_enabled | bool
    - services["iptables.service"] is defined

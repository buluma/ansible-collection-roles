---
# Â©Copyright 2015 Hewlett-Packard Development Company, L.P.

- name: create conf.d dir and custom plugin dir
  file: path="{{ item }}" state=directory owner=root group=root mode=755
  with_items:
    - "{{ monasca_conf_dir }}/agent/conf.d"
    - "/usr/lib/monasca/agent"

- name: Create additional plugins config
  template: dest="{{ monasca_conf_dir }}/agent/conf.d/{{ item.key }}.yaml" src=plugin.yaml.j2 owner=root group=root mode=644
  with_dict: "{{ monasca_checks }}"
  notify: run monasca-setup

- name: Install custom plugins
  ansible.builtin.pip:
    name: "git+{{ item }}"
    editable: False
    virtualenv: "{{ monasca_virtualenv_dir }}"
  with_items: "{{ monasca_agent_custom_plugin_repos }}"

- name: Check if the previous paths are directories
  ansible.builtin.stat:
    path: "{{ item }}"
  with_items:
    - "{{ monasca_agent_check_plugin_dir }}"
    - "{{ monasca_agent_detection_plugin_dir }}"
  register: prev_paths

- name: Delete previous paths if they are directories
  ansible.builtin.file:
    path: "{{ item.item }}"
    state: absent
  when:
    - item.stat.exists
    - item.stat.isdir
    - not item.stat.islnk
  with_items: "{{ prev_paths.results }}"

- name: Extract python interpreter version from virtualenv
  command: "{{ monasca_virtualenv_dir }}/bin/python -c \"import sysconfig; print(sysconfig.get_config_var('py_version_short'))\""
  register: py_version_short

- set_fact:
    venv_py_version: "{{ py_version_short.stdout_lines[0] }}"

- name: Ensures Monasca Agent custom plugins directories exist
  ansible.builtin.file:
    path: "{{ monasca_virtualenv_dir }}/lib/python{{ venv_py_version }}/site-packages/{{ item | regex_replace('\\/$', '') }}"
    state: directory
  with_items:
    - "{{ monasca_agent_check_plugin_dir }}"
    - "{{ monasca_agent_detection_plugin_dir }}"

- name: Link custom plugins from Monasca venv to hard coded folder searched by Monasca Agent
  ansible.builtin.file:
    src: "{{ monasca_virtualenv_dir }}/lib/python{{ venv_py_version }}/site-packages/{{ item | regex_replace('\\/$', '') }}"
    dest: "{{ item | regex_replace('\\/$', '') }}"
    state: link
  with_items:
    - "{{ monasca_agent_check_plugin_dir }}"
    - "{{ monasca_agent_detection_plugin_dir }}"

# Instead of running this directly by creating a file to run it changes such as user/pass will trigger a rerun. Also a user can run it manually
- name: Create reconfigure script
  template: dest="{{ agent_reconfigure_script }}" src=monasca-reconfigure.j2 owner=root group=root mode=750
  notify: run monasca-setup

- meta: flush_handlers

- name: Enable Monasca-Agent
  service: name="{{ monasca_agent_systemd_unit_filename }}" state=started enabled=yes

---
# Â©Copyright 2015-2016 Hewlett Packard Enterprise Development Company, LP

- include: pip_index.yml

- name: Set OS distribution dependent variables
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "deps_{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
        - "deps_{{ ansible_os_family }}.yml"
        - "deps_default.yml"
      paths:
        - "vars"

- name: Install deps to avoid pip doing compilation or enable it
  ansible.builtin.package:
    name: "{{ monasca_os_dependencies }}"

- name: Upgrade pip in virtualenv
  pip: name=pip state=latest virtualenv="{{ monasca_virtualenv_dir }}"

- name: Upgrade setuptools in virtualenv
  pip: name=setuptools state=latest virtualenv="{{ monasca_virtualenv_dir }}"

- name: pip install latest monasca-agent in a virtualenv
  pip: name=monasca-agent state=latest virtualenv="{{ monasca_virtualenv_dir }}" extra_args="{{ monasca_pip_extra_args | default(omit) }}"
  notify: run monasca-setup
  when: monasca_agent_version is not defined and monasca_agent_branch is not defined

- name: pip install a specific version of monasca-agent in a virtualenv
  pip: name=monasca-agent state=present version="{{ monasca_agent_version }}" virtualenv="{{ monasca_virtualenv_dir }}" extra_args="{{ monasca_pip_extra_args | default(omit) }}"
  notify: run monasca-setup
  when: monasca_agent_version is defined

- name: pip install a specific branch of monasca-agent in a virtualenv
  ansible.builtin.pip:
    name: "git+{{ monasca_agent_git_repo }}@{{ monasca_agent_branch }}"
    virtualenv: "{{ monasca_virtualenv_dir }}"
    editable: False
    extra_args: "{{ monasca_pip_extra_args | default(omit) }}"
  when: monasca_agent_branch is defined and monasca_agent_version is not defined

- name: "check if {{ monasca_agent_systemd_unit_filename }} file exists"
  ansible.builtin.stat:
    path: /etc/systemd/system/{{ monasca_agent_systemd_unit_filename }}
  register: target_file

- name: Populate service facts
  ansible.builtin.service_facts:

- name: "Disable {{ monasca_agent_legacy_systemd_unit_filename }} service if it exists"
  service: name="{{ monasca_agent_legacy_systemd_unit_filename }}" state=stopped enabled=no
  when:
    - target_file.stat.exists
    - monasca_agent_legacy_systemd_unit_filename in services

- name: "Delete {{ monasca_agent_legacy_systemd_unit_filename }} unit file if it exists"
  ansible.builtin.file:
    path: /etc/systemd/system/{{ monasca_agent_legacy_systemd_unit_filename }}
    state: absent
  when: target_file.stat.exists

- name: "Use {{ monasca_agent_legacy_systemd_unit_filename }} instead of {{ monasca_agent_systemd_unit_filename }} as the service"
  ansible.builtin.set_fact:
    monasca_agent_systemd_unit_filename: "{{ monasca_agent_legacy_systemd_unit_filename }}"
  when: not target_file.stat.exists

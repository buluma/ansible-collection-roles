---

- name: import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

# satisfied by role epel
# - name: install and enable EPEL
#   ansible.builtin.yum:
#     name: epel-release
#   when: centos_base_enable_epel | bool

- name: install requirements for centos_base
  ansible.builtin.package:
    name: "{{ centos_requirements }}"
    state: present
  when: centos_base_development_packages | bool

- name: install basic packages EL 6 and 7
  ansible.builtin.yum:
    name:
      - python-virtualenv
      - yum-cron
      - yum-utils
  when:
    - centos_base_basic_packages | bool
    - ansible_distribution_major_version == "6" or ansible_distribution_major_version == "7"

- name: install basic packages EL 8
  ansible.builtin.yum:
    name:
      - python3-virtualenv
  when:
    - centos_base_basic_packages | bool
    - ansible_distribution_major_version == "8"

- name: install the 'Development tools' package group
  ansible.builtin.yum:
    name: "@Development tools"
  when: centos_base_basic_packages | bool

# install selinux_packages
- name: install SELinux packages for CentOS 6 and CentOS 7
  ansible.builtin.yum:
    name: "{{ selinux_packages }}"
    state: present
  when:
    - centos_base_selinux_packages | bool
    - ansible_distribution_major_version == "6" or ansible_distribution_major_version == "7"

# - name: install SELinux packages for CentOS 6 and CentOS 7
#   ansible.builtin.yum:
#     name:
#       - policycoreutils
#       - policycoreutils-python
#       - selinux-policy
#       - selinux-policy-targeted
#       - libselinux-utils
#       - setroubleshoot-server
#       - setools
#       - setools-console
#       - mcstrans
#       - policycoreutils-devel
#       - setroubleshoot
#   when:
#     - centos_base_selinux_packages | bool
#     - ansible_distribution_major_version == "6" or ansible_distribution_major_version == "7"

- name: install SELinux packages for CentOS 8
  ansible.builtin.yum:
    name:
      - policycoreutils-python-utils
  when:
    - centos_base_selinux_packages | bool
    - ansible_distribution_major_version == "8"


# install utility_packages
- name: install utility packages
  ansible.builtin.yum:
    name: "{{ utility_packages }}"
    state: present
  when: centos_base_utility_packages | bool

# - name: install utility packages
#   ansible.builtin.yum:
#     name:
#       - vim-enhanced
#       - cifs-utils
#       - screen
#       - htop
#       - tree
#       - wget
#   when: centos_base_utility_packages | bool

- name: install zlib packages from EPEL
  ansible.builtin.yum:
    name:
      - zlib-static
      - zlib-ada-devel
      - zlib-ada
  when:
    - centos_base_enable_epel | bool
    - centos_base_development_packages | bool
    - ansible_distribution_major_version == "6" or ansible_distribution_major_version == "7"

# install debugging_packages
- name: install debugging packages
  ansible.builtin.yum:
    name: "{{ debugging_packages }}"
    state: present
  when: centos_base_debug_packages | bool

# - name: install debugging packages
#   ansible.builtin.yum:
#     name:
#       - strace
#       - mtr
#       - traceroute
#       - nmap
#       - iotop
#       - vnstat
#       - sysstat
#       - net-tools
#   when: centos_base_debug_packages | bool

- name: install packages specific to CentOS 6
  ansible.builtin.yum:
    name:
      - fail2ban
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "6"
    - centos_base_enable_epel | bool

- name: install packages specific to CentOS 7
  ansible.builtin.yum:
    name:
      - fail2ban-all
      - python-inotify
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "7"
    - centos_base_enable_epel | bool
    - centos_base_fail2ban_configuration | bool

- name: install firewalld
  ansible.builtin.yum:
    name: firewalld
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8"
    - centos_base_security_packages | bool
    - centos_base_firewalld | bool

- name: vim alias in .bashrc
  ansible.builtin.lineinfile:
    dest: /root/.bashrc
    line: "alias vi=vim"
    state: present
  when: centos_base_basic_vim_tweaks | bool

- name: .vimrc file
  ansible.builtin.template:
    dest: /root/
    src: root/.vimrc
  when: centos_base_basic_vim_tweaks | bool

- name: LOCKPRG to avoid locking of GNU screen sessions
  ansible.builtin.lineinfile:
    dest: /root/.bashrc
    line: 'export LOCKPRG="/bin/true"'
    state: present
  when: centos_base_lockprg | bool

- name: create htop direcotry
  ansible.builtin.file:
    path: /root/.config/htop
    state: directory
  when: centos_base_htop_configuration | bool

- name: configure htop
  ansible.builtin.template:
    src: root/.config/htop/htoprc
    dest: /root/.config/htop
  when: centos_base_htop_configuration | bool

- name: ensure fail2ban service is enabled and started
  ansible.builtin.service:
    name: fail2ban
    state: started
    enabled: true
  when: centos_base_fail2ban_configuration | bool

# Allow user to control /etc/fail2ban/jail.local
- name: secure Fail2ban configuration
  ansible.builtin.template:
    src: etc/fail2ban/jail.d/centos_base.conf
    dest: /etc/fail2ban/jail.d
  when: centos_base_fail2ban_configuration | bool

- name: secure SSH configuration
  ansible.builtin.template:
    src: etc/ssh/sshd_config
    dest: /etc/ssh
  notify: sshd restart
  when: centos_base_secure_sshd | bool

- name: ensure firewalld is started and enabled
  ansible.builtin.systemd:
    name: firewalld
    state: started
    enabled: true
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8"
    - centos_base_basic_packages | bool
    - centos_base_firewalld | bool

- name: enable firewalld services
  ansible.posix.firewalld:
    permanent: true
    service: "{{ item }}"
    state: enabled
    zone: public
  loop: '{{ centos_base_firewalld_services }}'
  notify:
    - firewalld restart
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8"
    - centos_base_firewalld_services | length > 0
    - centos_base_firewalld | bool

---
- name: Include default variables
  ansible.builtin.include_vars: "../vars/main.yml"

- name: Include release specific variables
  ansible.builtin.include_vars: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
      skip: true


# prepare
- name: Cp -rfT /etc/skel /root
  ansible.builtin.raw: |
    set -eu
    cp -rfT /etc/skel /root
  changed_when: false
  failed_when: false

- name: Setenforce 0
  ansible.builtin.raw: |
    set -eu
    setenforce 0
    sed -i 's/^SELINUX=.*$/SELINUX=permissive/g' /etc/selinux/config
  changed_when: false
  failed_when: false

# - name: Systemctl stop firewalld.service
#   ansible.builtin.raw: |
#     set -eu
#     systemctl stop firewalld.service
#     systemctl disable firewalld.service
#   changed_when: false
#   failed_when: false
#
# - name: Systemctl stop ufw.service
#   ansiblse.builtin.raw: |
#     set -eu
#     systemctl stop ufw.service
#     systemctl disable ufw.service
#   changed_when: false
#   failed_when: false

- name: Debian | apt-get install *.deb
  ansible.builtin.raw: |
    set -eu
    DEBIAN_FRONTEND=noninteractive apt-get install -y bzip2 ca-certificates curl gcc gnupg gzip hostname iproute2 passwd procps python3 python3-apt python3-jmespath python3-lxml python3-pip python3-setuptools python3-venv python3-virtualenv python3-wheel rsync sudo tar unzip util-linux xz-utils zip
  when: ansible_os_family | lower == "debian"
  changed_when: false
  failed_when: false

- name: Fedora | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-dnf-plugin-versionlock python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-utils zip
  when: ansible_distribution | lower == "fedora"
  changed_when: false
  failed_when: false

- name: Redhat-9 | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    yum-config-manager --enable crb || echo $?
    yum-config-manager --enable codeready-builder-beta-for-rhel-9-x86_64-rpms || echo $?
    yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-dnf-plugin-versionlock python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-utils zip
  when: ansible_os_family | lower == "redhat" and ansible_distribution_major_version | lower == "9"
  changed_when: false
  failed_when: false

- name: Redhat-8 | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-dnf-plugin-versionlock python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-utils zip
  when: ansible_os_family | lower == "redhat" and ansible_distribution_major_version | lower == "8"
  changed_when: false
  failed_when: false

- name: Redhat-7 | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    subscription-manager repos --enable=rhel-7-server-optional-rpms || echo $?
    yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-plugin-versionlock yum-utils zip
  when: ansible_os_family | lower == "redhat" and ansible_distribution_major_version | lower == "7"
  changed_when: false
  failed_when: false

- name: Suse | zypper -n install *.rpm
  ansible.builtin.raw: |
    set -eu
    zypper -n install -y bzip2 ca-certificates curl gcc gpg2 gzip hostname iproute2 procps python3 python3-jmespath python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow sudo tar unzip util-linux xz zip
  when: ansible_os_family | lower == "suse"
  changed_when: false
  failed_when: false

- name: Include release specific tasks
  ansible.builtin.include_tasks: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
      skip: true

# TODO: move install to os packaged installs
# - name: Install required pip packages | main
#   ansible.builtin.pip:
#     name:
#       - setuptools
#       - dataclasses

- name: Groupadd
  ansible.builtin.group:
    name: "{{ item.name }}"
    system: true
    state: "present"
  loop:
    - { name: "gitlab-www" }
    - { name: "git" }
    - { name: "gitlab-redis" }
    - { name: "gitlab-psql" }
    - { name: "mattermost" }
    - { name: "registry" }
    - { name: "gitlab-prometheus" }
    - { name: "gitlab-consul" }

- name: Useradd
  ansible.builtin.user:
    name: "{{ item.name }}"
    group: "{{ item.group }}"
    home: "{{ item.home }}"
    shell: "{{ item.shell }}"
    password: "{{ item.password | default(omit) }}"
    system: true
    create_home: false
    state: "present"
  loop:
    - { name: "gitlab-www", group: "gitlab-www", home: "/var/opt/gitlab/nginx", shell: "/bin/false" }
    - { name: "git", group: "git", home: "/var/opt/gitlab", shell: "/bin/sh", password: "*" }
    - { name: "gitlab-redis", group: "gitlab-redis", home: "/var/opt/gitlab/redis", shell: "/bin/false" }
    - { name: "gitlab-psql", group: "gitlab-psql", home: "/var/opt/gitlab/postgresql", shell: "/bin/sh" }
    - { name: "mattermost", group: "mattermost", home: "/var/opt/gitlab/mattermost", shell: "/bin/sh" }
    - { name: "registry", group: "registry", home: "/var/opt/gitlab/registry", shell: "/bin/sh" }
    - { name: "gitlab-prometheus", group: "gitlab-prometheus", home: "/var/opt/gitlab/prometheus", shell: "/bin/sh" }
    - { name: "gitlab-consul", group: "gitlab-consul", home: "/var/opt/gitlab/consul", shell: "/bin/sh" }

- name: Prepare directories
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/etc/gitlab", mode: "0775" }
    - { dest: "/var/log/gitlab" }
    - { dest: "/var/opt/gitlab" }
    - { dest: "/var/opt/gitlab/consul", owner: "gitlab-consul", group: "gitlab-consul" }
    - { dest: "/var/opt/gitlab/mattermost", owner: "mattermost", group: "mattermost" }
    - { dest: "/var/opt/gitlab/nginx", owner: "root", group: "gitlab-www", mode: "0750" }
    - { dest: "/var/opt/gitlab/postgresql", owner: "gitlab-psql", group: "gitlab-psql" }
    - { dest: "/var/opt/gitlab/prometheus", owner: "gitlab-prometheus", group: "gitlab-prometheus", mode: "0750" }
    - { dest: "/var/opt/gitlab/redis", owner: "gitlab-redis", group: "git", mode: "0750" }
    - { dest: "/var/opt/gitlab/registry", owner: "registry", group: "registry" }

- name: Copy templates
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { dest: "/etc/gitlab/gitlab.rb" }
  notify:
    - Gitlab_ce | gitlab-ctl reconfigure
    - Gitlab_ce | systemctl restart gitlab-runsvdir.service

- name: Prepare files
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/etc/gitlab/gitlab.rb" }
  notify:
    - Gitlab_ce | gitlab-ctl reconfigure
    - Gitlab_ce | systemctl restart gitlab-runsvdir.service

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Systemctl start gitlab-runsvdir.service
  ansible.builtin.service:
    name: "gitlab-runsvdir.service"
    state: "started"
    enabled: true
  changed_when: false
  failed_when: false

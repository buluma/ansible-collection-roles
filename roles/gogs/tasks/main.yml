---

# - name: install dependencies
#   ansible.builtin.apt:
#     name: '{{ item }}'
#     state: 'present'
#     update_cache: yes
#     cache_valid_time: 3600
#   with_items: '{{ gogs_dependency_pkgs }}'

- name: create user git
  ansible.builtin.user:
    name: '{{ gogs_user }}'
    comment: 'Gogs Git Service'
    home: '{{ gogs_user_home }}'
    shell: '/bin/bash'

- name: get binary
  ansible.builtin.get_url:
    url: '{{ gogs_binary_url }}/{{ gogs_version }}'
    dest: '{{ gogs_user_home }}/gogs.zip'
    owner: '{{ gogs_user }}'
    group: '{{ gogs_user }}'
    mode: 0644

- name: unzip binary zip
  # owner: '{{ gogs_user }}'
  ansible.builtin.unarchive:
    src: '{{ gogs_user_home }}/gogs.zip'
    dest: '{{ gogs_user_home }}/'
    creates: '{{ gogs_user_home }}/gogs'
    copy: no
    owner: '{{ gogs_user }}'
    group: '{{ gogs_user }}'

- name: set custom folder
  ansible.builtin.file:
    state: directory
    path: '{{ gogs_user_home }}/gogs/custom'
    owner: '{{ gogs_user }}'
    group: '{{ gogs_user }}'
    mode: 0755

- name: set custom conf folder
  ansible.builtin.file:
    state: directory
    path: '{{ gogs_user_home }}/gogs/custom/conf'
    owner: '{{ gogs_user }}'
    group: '{{ gogs_user }}'
    mode: 0755

- name: create Gogs log folder.
  ansible.builtin.file:
    path: '{{ gogs_user_home }}/gogs/log'
    state: 'directory'
    owner: '{{ gogs_user }}'
    group: '{{ gogs_user }}'
    mode: 0755

- name: configure app.ini
  ansible.builtin.template:
    src: 'app.ini.j2'
    dest: '{{ gogs_user_home }}/gogs/custom/conf/app.ini'
    owner: '{{ gogs_user }}'
    group: '{{ gogs_user }}'
    mode: 0644

- name: make binary executable
  ansible.builtin.file:
    path: '{{ gogs_user_home }}/gogs/gogs'
    owner: '{{ gogs_user }}'
    group: '{{ gogs_user }}'
    mode: 0755
  notify: restart_gogs

- name: copy the init script
  ansible.builtin.template:
    src: gogs-server.j2
    dest: /etc/init.d/gogs-server
    owner: root
    group: root
    mode: '0755'
  notify: restart_gogs

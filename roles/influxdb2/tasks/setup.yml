---
- name: Install dependencies
  ansible.builtin.package:
    name: "{{ influxdb_dependencies }}"
    state: present
    update_cache: true
  when: ansible_os_family == 'Debian'

- name: Install python3-dnf
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - wget
    - tar
  when: ansible_os_family == 'RedHat'

- name: Add InfluxData's key
  ansible.builtin.apt_key:
    state: present
    url: "{{ influxdb_signing_key }}"
  when: ansible_os_family == 'Debian'

- name: Manage InfluxData APT repositories
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ influxdb_repositories }}"
  when: ansible_os_family == 'Debian'

- name: Manage InfluxData Yum repositories
  ansible.builtin.yum_repository:
    name: InfluxDB Repository - RHEL \$releasever
    description: InfluxDB Repository - RHEL \$releasever
    baseurl: https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable
    enabled: yes
    gpgcheck: no
  when: ansible_os_family == 'RedHat'

- name: Ensure InfluxDB packages are installed | Apt
  ansible.builtin.apt:
    name: "{{ item }}"
    state: "{{ influxdb_package_state }}"
    update_cache: true
  loop: "{{ influxdb_packages }}"
  when: ansible_os_family == 'Debian'

# - name: Ensure InfluxDB packages are installed | Yum
#   ansible.builtin.yum:
#     name: "{{ item }}"
#     state: "{{ influxdb_package_state }}"
#     update_cache: true
#   loop: "{{ influxdb_packages }}"
#   when: ansible_os_family == 'RedHat'

# - name: Ensure InfluxDB packages are installed | Package
#   ansible.builtin.dnf:
#     name: "{{ item }}"
#     state: "{{ influxdb_package_state }}"
#     update_cache: true
#   loop: "{{ influxdb_packages }}"

# - name: Unarchive a file that needs to be downloaded (added in 2.0)
#   ansible.builtin.unarchive:
#     src: https://dl.influxdata.com/influxdb/releases/influxdb2-2.4.0-linux-arm64.tar.gz
#     dest: /tmp
#     remote_src: yes

- name: Unarchive a file that is already on the remote machine
  ansible.builtin.command: |
    cat <<EOF | sudo tee /etc/yum.repos.d/influxdb.repo
    [influxdb]
    name = InfluxDB Repository - RHEL \$releasever
    baseurl = https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable
    enabled = 1
    gpgcheck = 1
    gpgkey = https://repos.influxdata.com/influxdb.key
    EOF

- name: install RedHat
  command: |
    sudo yum install influxdb2

# - name: Ensure InfluxDB packages are installed | RedHat
#   command: |
#     wget https://dl.influxdata.com/influxdb/releases/influxdb2-2.4.0-linux-arm64.tar.gz && tar xvfz influxdb2-2.4.0-linux-arm64.tar.gz
#   when: ansible_os_family == 'RedHat'

- name: Setup InfluxDB default file
  ansible.builtin.template:
    dest: /etc/default/influxdb2
    group: root
    mode: 0644
    owner: root
    src: etc/default/influxdb2.j2
  notify: Restart InfluxDB

- name: create influxdb system group
  ansible.builtin.group:
    name: influxdb
    system: true
    state: present

- name: create influxdb system user
  ansible.builtin.user:
    name: influxdb
    system: true
    shell: "/usr/sbin/nologin"
    group: influxdb
    # createhome: false
    # home: "{{ prometheus_db_dir }}"

- name: Ensure InfluxDB directories exist
  ansible.builtin.file:
    group: influxdb
    mode: 0750
    owner: influxdb
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ influxdb_config_path }}"
    - "{{ influxdb_bolt_path | dirname }}"
    - "{{ influxdb_engine_path }}"

- name: Remove any previous InfluxDB configuration file
  ansible.builtin.file:
    path: "{{ influxdb_config_path }}/{{ item }}"
    state: absent
  loop:
    - config.json
    - config.toml
  notify: Restart InfluxDB

- name: Setup InfluxDB configuration file
  ansible.builtin.template:
    dest: "{{ influxdb_config_path }}/config.yml"
    group: influxdb
    mode: 0644
    owner: influxdb
    src: etc/influxdb/config.yml.j2
  notify: Restart InfluxDB

- name: Ensure InfluxDB service is in the desired state
  service:
    enabled: "{{ influxdb_service_enabled }}"
    name: "{{ influxdb_service_name }}"
    state: "{{ influxdb_service_state }}"

# - name: Ensure InfluxDB service is in the desired state
#   ansible.builtin.service:
#     name: "{{ influxdb_service_name }}"
#     state: started

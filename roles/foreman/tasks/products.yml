---
- name: 'Ensure product GPG keys'
  theforeman.foreman.content_credential:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ product['gpg_key'] }}"
    content_type: 'gpg_key'
    content: "{{ lookup('url', product['gpg_key_url'], split_lines=False) }}"
    state: 'present'
  loop: "{{ foreman_products }}"
  when: product['gpg_key'] is defined
  loop_control:
    loop_var: 'product'
    label: "{{ product['gpg_key'] }}"
  no_log: "{{ not foreman_debug }}"

- name: 'Ensure products'
  theforeman.foreman.product:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    name: "{{ product['name'] }}"
    description: 'Managed by Ansible, your changes will be lost'
    sync_plan: "{{ (product['no_sync'] | default(false)) |ternary(omit, 'Daily repo sync') }}"
    state: 'present'
  loop: "{{ foreman_products }}"
  loop_control:
    loop_var: 'product'
    label: "{{ product['name'] }}"
  no_log: "{{ not foreman_debug }}"

- name: 'Ensure product repositories'
  theforeman.foreman.repository:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    download_policy: "{{ (repo[0]['type'] == 'docker' or repo[0]['type'] == 'file') | ternary(omit, repo[0]['download_policy']) | default(foreman_download_policy) }}"  # noqa yaml
    download_concurrency: "{{ repo[0]['download_concurrency'] | default(omit) }}"
    http_proxy_policy: "{{ foreman_http_proxy_policy | default('none') }}"
    http_proxy: "{{ repo[0]['proxy'] | default(omit) }}"
    name: "{{ repo[0]['name'] }}-{{ repo[1]['name'] }}"
    url: "{{ repo[1]['url'] | default(omit) }}"
    mirror_on_sync: "{{ repo[0]['mirror_on_sync'] | default(omit) }}"
    content_type: "{{ repo[0]['type'] }}"
    ignoreable_content: "{{ repo[1]['ignored_content'] | default(omit) }}"
    ssl_ca_cert: "{{ repo[1]['ssl_ca_cert'] | default(omit) }}"
    ssl_client_cert: "{{ repo[1]['ssl_client_cert'] | default(omit) }}"
    ssl_client_key: "{{ repo[1]['ssl_client_key'] | default(omit) }}"
    upstream_username: "{{ repo[1]['upstream_username'] | default(omit) }}"
    upstream_password: "{{ repo[1]['upstream_password'] | default(omit) }}"
    docker_upstream_name: "{{ repo[1]['docker_upstream_name'] | default(omit) }}"
    docker_tags_whitelist: "{{ repo[1]['docker_tags_whitelist'] | default(omit) }}"
    product: "{{ repo[0]['name'] }}"
    gpg_key: "{{ (repo[1]['no_gpg_key'] | default(False) or repo[0]['type'] == 'docker') | ternary(omit, repo[0]['gpg_key']) }}"
    state: 'present'
  register: 'repo_created'
  loop: "{{ foreman_products | ansible.builtin.subelements('repositories', { 'skip_missing': true}) }}"
  loop_control:
    loop_var: 'repo'
    label: "{{ repo[0]['name'] }}-{{ repo[1]['name'] }}"
  no_log: "{{ not foreman_debug }}"

- name: 'Set empty list'
  ansible.builtin.set_fact:
    product_list: []

- name: 'Set Product list'
  ansible.builtin.set_fact:
    product_list: "{{ product_list + [ product['repo'][0]['name'] ] }}"
  when: >
    product['changed'] and ((product['repo'][0]['no_sync'] is defined and not product['repo'][0]['no_sync']) or
    product['repo'][0]['no_sync'] is not defined)
  loop: "{{ repo_created['results'] }}"
  loop_control:
    loop_var: 'product'
    label: "{{ product['repo'][0]['name'] }}"
  no_log: "{{ not foreman_debug }}"

- name: 'Sync repositories for changed Products, this may take long...'  # noqa ignore-errors
  theforeman.foreman.repository_sync:
    username: "{{ foreman_admin_user }}"
    password: "{{ foreman_admin_password }}"
    server_url: "{{ foreman_url }}"
    validate_certs: "{{ foreman_validate_certs }}"
    organization: "{{ foreman_organization }}"
    product: "{{ product }}"
  loop: "{{ product_list | unique }}"
  loop_control:
    loop_var: 'product'
    label: "{{ product }}"
  async: 10800
  poll: 60
  retries: 5
  delay: 5
  ignore_errors: true  # ignore errors, as a failed sync is not the end of the world
  when: foreman_run_content_sync|bool

---
- name: Include default variables
  ansible.builtin.include_vars: "../vars/main.yml"

- name: Include release specific variables
  ansible.builtin.include_vars: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
      skip: true

# prepare system
- name: Redhat | subscription-manager register
  ansible.builtin.raw: |
    set -eu
    subscription-manager register \
      --username={{ lookup('env', 'REDHAT_USERNAME') }} \
      --password={{ lookup('env', 'REDHAT_PASSWORD') }} \
      --auto-attach
  changed_when: false
  failed_when: false

- name: Debian | apt-get install python3
  ansible.builtin.raw: |
    set -eu
    apt-get update
    DEBIAN_FRONTEND=noninteractive apt-get install -y python3
  changed_when: false
  failed_when: false

- name: Redhat | yum install python3
  ansible.builtin.raw: |
    set -eu
    yum makecache
    yum install -y python3
  changed_when: false
  failed_when: false

- name: Suse | zypper install python3
  ansible.builtin.raw: |
    set -eu
    zypper -n --gpg-auto-import-keys refresh
    zypper -n install -y python3
  changed_when: false
  failed_when: false

- name: Cp -rfT /etc/skel /root
  ansible.builtin.raw: |
    set -eu
    cp -rfT /etc/skel /root
  changed_when: false
  failed_when: false

- name: Setenforce 0
  ansible.builtin.raw: |
    set -eu
    setenforce 0
    sed -i 's/^SELINUX=.*$/SELINUX=permissive/g' /etc/selinux/config
  changed_when: false
  failed_when: false

- name: Systemctl stop firewalld.service
  ansible.builtin.raw: |
    set -eu
    systemctl stop firewalld.service
    systemctl disable firewalld.service
  changed_when: false
  failed_when: false

- name: Systemctl stop ufw.service
  ansible.builtin.raw: |
    set -eu
    systemctl stop ufw.service
    systemctl disable ufw.service
  changed_when: false
  failed_when: false

- name: Debian | apt-get install *.deb
  ansible.builtin.raw: |
    set -eu
    DEBIAN_FRONTEND=noninteractive apt-get install -y bzip2 ca-certificates curl gcc gnupg gzip hostname iproute2 passwd procps python3 python3-apt python3-jmespath python3-lxml python3-pip python3-setuptools python3-venv python3-virtualenv python3-wheel rsync sudo tar unzip util-linux xz-utils zip
  when: ansible_os_family | lower == "debian"
  changed_when: false
  failed_when: false

- name: Fedora | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-dnf-plugin-versionlock python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-utils zip
  when: ansible_distribution | lower == "fedora"
  changed_when: false
  failed_when: false

- name: Redhat-9 | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    yum-config-manager --enable crb || echo $?
    yum-config-manager --enable codeready-builder-beta-for-rhel-9-x86_64-rpms || echo $?
    yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-dnf-plugin-versionlock python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-utils zip
  when: ansible_os_family | lower == "redhat" and ansible_distribution_major_version | lower == "9"
  changed_when: false
  failed_when: false

- name: Redhat-8 | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-dnf-plugin-versionlock python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-utils zip
  when: ansible_os_family | lower == "redhat" and ansible_distribution_major_version | lower == "8"
  changed_when: false
  failed_when: false

- name: Redhat-7 | yum install *.rpm
  ansible.builtin.raw: |
    set -eu
    subscription-manager repos --enable=rhel-7-server-optional-rpms || echo $?
    yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    yum install -y bzip2 ca-certificates curl gcc gnupg2 gzip hostname iproute procps-ng python3 python3-jmespath python3-libselinux python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow-utils sudo tar unzip util-linux xz yum-plugin-versionlock yum-utils zip
  when: ansible_os_family | lower == "redhat" and ansible_distribution_major_version | lower == "7"
  changed_when: false
  failed_when: false

- name: Suse | zypper -n install *.rpm
  ansible.builtin.raw: |
    set -eu
    zypper -n install -y bzip2 ca-certificates curl gcc gpg2 gzip hostname iproute2 procps python3 python3-jmespath python3-lxml python3-pip python3-setuptools python3-virtualenv python3-wheel rsync shadow sudo tar unzip util-linux xz zip
  when: ansible_os_family | lower == "suse"
  changed_when: false
  failed_when: false


- name: Include release specific tasks
  ansible.builtin.include_tasks: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
      skip: true

- name: Groupadd
  ansible.builtin.group:
    name: "{{ confluence_group }}"
    system: true
    state: "present"

- name: Useradd
  ansible.builtin.user:
    name: "{{ confluence_owner }}"
    group: "{{ confluence_group }}"
    home: "{{ confluence_home }}"
    shell: "/usr/sbin/nologin"
    system: true
    create_home: false
    state: "present"

- name: Prepare directories
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/etc/systemd/system" }
    - dest: "{{ confluence_catalina }}"
      owner: "{{ confluence_owner }}"
      group: "{{ confluence_group }}"
    - dest: "{{ confluence_catalina }}/bin"
      owner: "{{ confluence_owner }}"
      group: "{{ confluence_group }}"
    - dest: "{{ confluence_catalina }}/conf"
      owner: "{{ confluence_owner }}"
      group: "{{ confluence_group }}"
    - dest: "{{ confluence_home }}"
      owner: "{{ confluence_owner }}"
      group: "{{ confluence_group }}"

- name: Download archive
  ansible.builtin.shell: |
    set -euxo pipefail
    mkdir -p /var/log/ansible
    exec &> >(tee -a /var/log/ansible/{{ item.checksum }}-get_url.log)
    TMP_DIR="$(mktemp -d)" \
      && cd $TMP_DIR \
      && mkdir -p .{{ item.dest | dirname }} \
      && curl -skL -m 300 {{ item.url }} > .{{ item.dest }} \
      && echo -n "{{ item.checksum }} .{{ item.dest }}" | sha256sum -c - \
      && mkdir -p {{ item.dest | dirname }} \
      && mv .{{ item.dest }} {{ item.dest }} \
      && rm -rf $TMP_DIR
  args:
    executable: "/bin/bash"
    creates: "/var/log/ansible/{{ item.checksum }}-get_url.log"
  loop:
    - "{{ confluence_download }}"
    - "{{ postgresql_jdbc_download }}"
  register: result
  until: result is succeeded

- name: Unarchive package
  ansible.builtin.shell: |
    set -euxo pipefail
    mkdir -p /var/log/ansible
    exec &> >(tee -a /var/log/ansible/{{ confluence_download.checksum }}-unarchive.log)
    rm -rf {{ confluence_catalina }} \
      && mkdir -p {{ confluence_catalina }}
    cd {{ confluence_catalina }}
    TMP_DIR="$(mktemp -d)" \
      && tar -zx -C $TMP_DIR -f {{ confluence_download.dest }} \
      && cp -rfT $TMP_DIR/* . \
      && rm -rf $TMP_DIR
    cd {{ confluence_catalina }}/confluence/WEB-INF/lib
    rm -rf *postgresql*.jar
    cp {{ postgresql_jdbc_download.dest }} .
    chown -Rf {{ confluence_owner }}:{{ confluence_group }} {{ confluence_catalina }}
    chmod 0755 \
      {{ confluence_catalina }} \
      {{ confluence_catalina }}/bin \
      {{ confluence_catalina }}/conf
  args:
    executable: "/bin/bash"
    creates: "/var/log/ansible/{{ confluence_download.checksum }}-unarchive.log"
  notify:
    - Confluence | systemctl daemon-reload
    - Confluence | systemctl restart confluence.service

- name: Copy templates
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { dest: "/etc/systemd/system/confluence.service" }
    - dest: "{{ confluence_catalina }}/bin/setenv.sh"
      src: "./templates/opt/atlassian/confluence/bin/setenv.sh.j2"
      owner: "{{ confluence_owner }}"
      group: "{{ confluence_group }}"
      mode: "0755"
    - dest: "{{ confluence_catalina }}/conf/server.xml"
      src: "./templates/opt/atlassian/confluence/conf/server.xml.j2"
      owner: "{{ confluence_owner }}"
      group: "{{ confluence_group }}"
  notify:
    - Confluence | systemctl daemon-reload
    - Confluence | systemctl restart confluence.service

- name: Prepare files
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/etc/systemd/system/confluence.service" }
    - dest: "{{ confluence_catalina }}/bin/setenv.sh"
      owner: "{{ confluence_owner }}"
      group: "{{ confluence_group }}"
      mode: "0755"
    - dest: "{{ confluence_catalina }}/conf/server.xml"
      owner: "{{ confluence_owner }}"
      group: "{{ confluence_group }}"
  notify:
    - Confluence | systemctl daemon-reload
    - Confluence | systemctl restart confluence.service

- name: Patch {{ confluence_catalina }}/confluence/WEB-INF/web.xml
  vars:
    ansible_python_interpreter: "python3"
  community.general.xml:
    path: "{{ confluence_catalina }}/confluence/WEB-INF/web.xml"
    xpath: "/ns:web-app/ns:session-config/ns:session-timeout"
    namespaces:
      ns: "http://xmlns.jcp.org/xml/ns/javaee"
    value: "{{ confluence_session_timeout | int }}"
    state: "present"
  notify:
    - Confluence | systemctl restart confluence.service

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Systemctl start confluence.service
  ansible.builtin.service:
    name: "confluence.service"
    state: "started"
    enabled: true
  changed_when: false
  failed_when: false

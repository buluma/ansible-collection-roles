---

- name: "check if SonarQube binary exists"
  ansible.builtin.stat:
    path: "{{ sonar_daemon_dir }}/sonar.sh"
  register: sonar_binary_stat

- block:
    - name: "download SonarQube binaries"
      ansible.builtin.get_url:
        url: "{{ sonar_download_url }}"
        dest: "/tmp/{{ __sonar_archive }}"
      retries: 5
      delay: 10

    - name: "expand SonarQube binaries"
      ansible.builtin.unarchive:
        src: "/tmp/{{ __sonar_archive }}"
        dest: "{{ sonar_install_directory }}"
        owner: "{{ sonar_user }}"
        group: "{{ sonar_group }}"
        copy: no

    - name: "remove SonarQube archive"
      ansible.builtin.file:
        path: "/tmp/{{ __sonar_archive }}"
        state: absent

    - name: "collect the list of services to check if sonar.service exists"
      ansible.builtin.service_facts:

    - name: "stop service before upgrade"
      ansible.builtin.service:
        name: sonar
        state: stopped
      when: '"sonar.service" in ansible_facts.services'
      notify: warn about post-upgrade steps

  when: not sonar_binary_stat.stat.exists

- name: "ensure SonarQube as init script for service management"
  ansible.builtin.file:
    src: "{{ sonar_daemon_dir }}/sonar.sh"
    dest: /etc/init.d/sonar
    state: link
  when: "ansible_service_mgr != 'systemd'"

- name: "copy SonarQube systemd unit file into place (for systemd systems)."
  ansible.builtin.template:
    src: sonar.service.j2
    dest: /etc/systemd/system/sonar.service
    owner: root
    group: root
    mode: 0755
  register: systemd_service
  when: "ansible_service_mgr == 'systemd'"

- name: force systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: yes
  tags: skip_ansible_lint
  when: systemd_service is defined and systemd_service.changed

- name: "ensure SonarQube is running and set to start on boot."
  ansible.builtin.service:
    name: sonar
    state: started
    enabled: yes

- name: "ensure SonarQube files permissions"
  ansible.builtin.file:
    path: "{{ sonar_install_directory }}"
    state: directory
    recurse: yes
    owner: "{{ sonar_user }}"
    group: "{{ sonar_group }}"
    mode: "o-w"

- name: "ensure SonarQube configuration"
  ansible.builtin.template:
    src: "sonar.properties.j2"
    dest: "{{ sonar_conf_dir }}/sonar.properties"
    owner: "{{ sonar_user }}"
    group: "{{ sonar_group }}"
    mode: "u=rw,g=,o="
  no_log: true
  notify:
    - "restart SonarQube service"

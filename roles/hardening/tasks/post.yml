---
- name: create /boot/grub directory if efi boot
  become: 'yes'
  ansible.builtin.file:
    path: /boot/grub
    state: directory
    mode: 0755
    owner: root
    group: root
  when: booted_with_efi|bool
  tags:
    - grub

- name: run all notified handlers
  ansible.builtin.meta: flush_handlers

- name: register RedHat grub audit settings
  become: 'yes'
  ansible.builtin.shell: |
    set -o pipefail
    grep "CMDLINE_LINUX=.*{{ grub_audit_cmdline }} {{ grub_audit_backlog_cmdline }}" /etc/default/grub
  changed_when: false
  failed_when: false
  args:
    executable: /bin/bash
  register: audit_grubenv
  when: ansible_os_family == "RedHat"
  tags:
    - auditd
    - grub

- name: update grub2 if missing grub settings
  become: 'yes'
  ansible.builtin.command: grub2-mkconfig
  when: ansible_os_family == "RedHat" and audit_grubenv.rc != 0
  tags:
    - auditd
    - grub

- name: register Debian audit grub settings
  become: 'yes'
  ansible.builtin.shell: grep "linux.*{{ grub_audit_cmdline }} {{ grub_audit_backlog_cmdline }}" /boot/grub/grub.cfg
  changed_when: false
  failed_when: false
  register: audit_grub_cfg
  when: ansible_os_family == "Debian"
  tags:
    - auditd
    - grub

- name: update grub if missing grub settings
  become: 'yes'
  ansible.builtin.command: update-grub
  when: ansible_os_family == "Debian" and audit_grub_cfg.rc != 0
  tags:
    - auditd
    - grub

- name: find grub config files
  become: 'yes'
  ansible.builtin.find:
    paths: /boot
    patterns: "*.cfg,grubenv"
    recurse: 'yes'
  register: grub_cfg
  tags:
    - grub
    - CIS-UBUNTU2004-1.4.3

- name: set grub config permissions
  become: 'yes'
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: 0400
  when: item.mode|int > 400
  changed_when: false
  with_items:
    - "{{ grub_cfg.files | reject('search','/boot/efi/EFI/ubuntu/grub.cfg') | list }}"
  loop_control:
    label: "{{ item.path }}"
  tags:
    - grub
    - CIS-UBUNTU2004-1.4.3
...

---
# tasks file for jenkins

- name: import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: yes
  delegate_to: localhost

- name: add yum repository
  ansible.builtin.get_url:
    url: "{{ jenkins_yum_repository_baseurl }}"
    dest: /etc/yum.repos.d/jenkins.repo
    validate_certs: no
  when:
    - ansible_pkg_mgr in [ "dnf", "yum" ]

- name: import rpm key
  ansible.builtin.rpm_key:
    key: "{{ jenkins_rpm_key }}"
    state: present
    validate_certs: no
  when:
    - ansible_pkg_mgr in [ "dnf", "yum", "zypper" ]

- name: configure apt
  block:
    - name: add apt key
      ansible.builtin.apt_key:
        url: "{{ jenkins_apt_key_url }}"
        state: present

    - name: add apt repository
      ansible.builtin.apt_repository:
        repo: "{{ jenkins_apt_repository_repo }}"
        state: present
  when:
    - ansible_pkg_mgr == "apt"

- name: add zypper repository
  community.general.zypper_repository:
    name: jenkins
    repo: "{{ jenkins_zypper_repository_repo }}"
    state: present
  when:
    - ansible_pkg_mgr == "zypper"

- name: install requirements
  ansible.builtin.package:
    name: "{{ jenkins_requirements }}"
    state: present

- name: install jenkins
  ansible.builtin.package:
    name: jenkins
    state: present

# Install default plugins (suggested plugins) #14
- name: Install default plugins when choice 'install suggested plugins'
  jenkins_plugin:
    name: "{{ item }}"
    url: http://localhost:8080
    url_username: "admin"
    url_password: "{{ adminpwd['stdout'] }}"
  register: plugin_result
  until: plugin_result is success
  loop:
    - cloudbees-folder
    - antisamy-markup-formatter
    - build-timeout
    - credentials-binding
    - timestamper
    - ws-cleanup
    - ant
    - gradle
    - workflow-aggregator
    - github-branch-source
    - pipeline-github-lib
    - pipeline-stage-view
    - git
    - ssh-slaves
    - matrix-auth
    - pam-auth
    - ldap
    - email-ext
    - mailer

- name: configure jenkins
  ansible.builtin.template:
    src: jenkins.j2
    dest: "{{ jenkins_configuration_directory }}"
    mode: "0640"
  notify:
    - restart jenkins

- name: start jenkins
  block:
    - name: start and enable jenkins
      ansible.builtin.service:
        name: jenkins
        state: started
        enabled: yes
  when: ansible_facts['distribution'] == 'RedHat'
  ignore_errors: yes

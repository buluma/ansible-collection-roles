---
- name: Upload NGINX config snippets
  when: nginx_config_upload_enable | bool
  block:
    - name: Ensure NGINX config snippet directories exist
      ansible.builtin.file:
        path: "{{ item.dest | dirname if item.dest.endswith('.conf') else item.dest | default('/etc/nginx') }}"
        state: directory
        mode: 0755
      loop: "{{ nginx_config_upload }}"

    - name: Upload NGINX config snippet files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest | default('/etc/nginx/') }}"
        backup: "{{ item.backup | default(true) }}"
        mode: 0644
      loop: "{{ nginx_config_upload }}"
      notify: (Handler - NGINX Config) Run NGINX

- name: Upload HTML files
  when: nginx_config_upload_html_enable | bool
  block:
    - name: Ensure HTML directory exists
      ansible.builtin.file:
        path: "{{ item.dest | dirname if item.dest.endswith('.html') else item.dest | default('/usr/share/nginx/html') }}"
        state: directory
        mode: 0755
      loop: "{{ nginx_config_upload_html }}"

    - name: Upload HTML files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest | default('/usr/share/nginx/html') }}"
        backup: "{{ item.backup | default(true) }}"
        mode: 0644
      loop: "{{ nginx_config_upload_html }}"
      notify: (Handler - NGINX Config) Run NGINX

- name: Upload NGINX SSL certificates and keys
  when: nginx_config_upload_ssl_enable | bool
  block:
    - name: Ensure SSL certificate and key directories exist
      ansible.builtin.file:
        path: "{{ item.dest }}"
        state: directory
        mode: 0755
      loop: "{{ nginx_config_upload_ssl_crt + nginx_config_upload_ssl_key }}"

    - name: Upload NGINX SSL certificates
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest | default('/etc/ssl/certs') }}"
        backup: "{{ item.backup | default(true) }}"
        mode: 0640
      loop: "{{ nginx_config_upload_ssl_crt }}"

    - name: Upload NGINX SSL keys
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest | default('/etc/ssl/private') }}"
        backup: "{{ item.backup | default(true) }}"
        mode: 0640
      loop: "{{ nginx_config_upload_ssl_key }}"
      no_log: true

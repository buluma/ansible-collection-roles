---
# tasks file for helm

- name: update apt cache.
  apt: update_cache=yes cache_valid_time=600
  when: ansible_os_family == 'Debian'
  changed_when: false

- name: verify whether helm binary exists.
  ansible.builtin.stat:
    path: "{{ helm_bin_path }}"
  register: helm_check

- name: check helm version.
  command: "{{ helm_bin_path }} version"
  failed_when: false
  changed_when: false
  register: helm_existing_version

- debug: var=helm_existing_version

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /tmp/helm
    state: directory
    mode: '0755'
  register: endpoint_dir

- debug: var=endpoint_dir

# - fail:

- name: download helm package.
  ansible.builtin.unarchive:
    src: "{{ helm_repo_path }}/helm-{{ helm_version }}-{{ helm_platform }}-{{ helm_arch }}.tar.gz"
    # dest: /tmp
    dest: /tmp/helm/
    remote_src: true
    mode: 0755
  register: helm_download
  when: >
    not helm_check.stat.exists
    or helm_version not in helm_existing_version.stdout

- debug: var=helm_download

- name: check download
  command: |
    ls -la /tmp/helm
  register: download_results

- debug: var=download_results

- fail:
- name: copy helm binary into place.
  ansible.builtin.copy:
    src: "/tmp/{{ helm_platform }}-{{ helm_arch }}/helm"
    dest: "{{ helm_bin_path }}"
    mode: 0755
    remote_src: true
  become: true
  when: helm_download is changed

---

- name: test if cups_listen is set correctly
  ansible.builtin.assert:
    that:
      - cups_listen is defined
      - cups_listen is string
    quiet: yes

- name: test if cups_browsing is set correctly
  ansible.builtin.assert:
    that:
      - cups_browsing is defined
      - cups_browsing is string
      - cups_browsing in [ "Off", "On" ]
    quiet: yes

- name: test if cups_locations is set correctly
  ansible.builtin.assert:
    that:
      - cups_locations is defined
      - cups_locations is iterable
    quiet: yes

- name: test if item in cups_locations is set correctly
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.order is defined
      - item.order is string
    quiet: yes
  loop: "{{ cups_locations }}"
  loop_control:
    label: "{{ item.name }}"

- name: test if item.authtype in cups_locations is set correctly
  ansible.builtin.assert:
    that:
      - item.authtype in [ "Basic", "Default", "Negotiate", "None" ]
    quiet: yes
  loop: "{{ cups_locations }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.authtype is defined

- name: test if item.allow in cups_locations is set correctly
  ansible.builtin.assert:
    that:
      - item.allow is string
    quiet: yes
  loop: "{{ cups_locations }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.allow is defined

- name: test if cups_preserve_job_history is set correctly
  ansible.builtin.assert:
    that:
      - cups_preserve_job_history is defined
      - cups_preserve_job_history is string
      - cups_preserve_job_history in [ "No", "Yes" ]
    quiet: yes

- name: test if cups_web_interface is set correctly
  ansible.builtin.assert:
    that:
      - cups_web_interface is defined
      - cups_web_interface is string
      - cups_web_interface in [ "No", "Yes" ]
    quiet: yes

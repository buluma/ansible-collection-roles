---
- name: mozilla-nss | {{ task.name }} | Ensure the main working directory
  ansible.builtin.file:
    path: '{{ main_dir }}'
    state: directory
    mode: '0755'
  register: result_main_dir

- name: mozilla-nss | {{ task.name }} | Ensure Bugzilla workspaces directory
  ansible.builtin.file:
    path: '{{ bugzilla_dev_dir }}'
    state: directory
    mode: '0775'
  register: result_bugzilla_dev_dir

- name: mozilla-nss | {{ task.name }} | Ensure mozbuild directory
  ansible.builtin.file:
    path: '{{ mozbuild_dir }}'
    state: directory
    mode: '0775'
  register: result_mozbuild_dir
  when: result_main_dir is success

- name: mozilla-nss | {{ task.name }} | Ensure moz-phap directory
  ansible.builtin.file:
    path: '{{ moz_phab_dir }}'
    state: directory
    mode: '0775'
  register: result_moz_phab_dir
  when: result_mozbuild_dir is success

- name: mozilla-nss | {{ task.name }} | Ensure moz-phap script is updated
  ansible.builtin.get_url:
    url: '{{ moz_phab_file }}'
    dest: '{{ moz_phab_dir }}'
    mode: '0755'
  when: result_moz_phab_dir is success

- name: mozilla-nss | {{ task.name }} | Ensure the Mercurial repositories are updated
  community.general.hg:
    repo: '{{ item.repo }}'
    dest: '{{ item.dest }}'
    purge: yes
    clone: yes
    update: yes
    revision: "default"
  loop: '{{ hg_repos }}'
  register: result_hg
  when:
    - item.enabled
    - result_main_dir is success

- name: mozilla-nss | {{ task.name }} | Ensure the Git repositories are updated
  ansible.builtin.git:
    repo: '{{ item.repo }}'
    dest: '{{ item.dest }}'
    clone: yes
    update: yes
    version: "HEAD"  # Bug
  loop: '{{ git_repos }}'
  register: result_git
  when:
    - item.enabled
    - result_main_dir is success
    - result_mozbuild_dir is success

- name: mozilla-nss | {{ task.name }} | Check the existence of PATH environment variable
  ansible.builtin.replace:
    dest: '{{ user_env_file }}'
    regexp: '^export PATH='
    replace: 'export PATH=""'
  check_mode: yes
  register: result_path_env_check

- name: mozilla-nss | {{ task.name }} | Ensure the existence of PATH environment variable
  ansible.builtin.lineinfile:
    dest: '{{ user_env_file }}'
    state: present
    line: 'export PATH="$PATH"'
  register: result_path_env_ensure
  when:
    - result_path_env_check is not changed

- name: mozilla-nss | {{ task.name }} | Ensure PATH environment variable is updated
  ansible.builtin.lineinfile:
    dest: '{{ user_env_file }}'
    state: present
    backrefs: yes
    backup: yes
    regexp: 'export PATH=(["]*)((?!.*?{{ item.path }}).*?)(["]*)$'
    line: 'export PATH=\1\2:{{ item.path }}\3'
  loop: '{{ path_env }}'
  register: result_path_env_set
  when:
    - item.enabled
    - result_path_env_ensure is success or result_path_env_ensure is skipped

- name: mozilla-nss | {{ task.name }} | Ensure the kernel configurations with Sysctl
  become: yes
  ansible.posix.sysctl:
    name: '{{ item.parameter }}'
    value: '{{ item.value }}'
    state: '{{ item.state }}'
    reload: yes
  loop: '{{ sysctl_config }}'
  register: result_sysctl_watches
  when: item.enabled

- name: mozilla-nss | {{ task.name }} | Build NSS in main working directory
  ansible.builtin.command:
    chdir: '{{ main_dir }}/{{ item.name }}'
    argv:
      - '{{ item.command }}'
    warn: yes
  loop: '{{ build }}'
  register: result_build
  when:
    - item.enabled
    - result_hg is success

- name: mozilla-nss | {{ task.name }} | Execute NSS tests in main working directory
  environment:
    HOST: localhost
    DOMSUF: localdomain
    USE_64: "{{ '1' if ansible_facts['userspace_bits'] == '64' else '0' }}"
  ansible.builtin.command:
    chdir: '{{ main_dir }}/{{ item.dir }}'
    argv:
      - '{{ item.command }}'
    warn: yes
  loop: '{{ nss_tests }}'
  when:
    - item.enabled
    - result_build is success

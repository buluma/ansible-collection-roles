---
# tasks file for joomla
# origin: https://github.com/radamanth/joomla-ansible/blob/master/tasks/main.yml
- name: Update Cache on Debian.
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian'

- name: Ensure Apache is installed.
  ansible.builtin.package:
    name: "{{ apache_package }}"
    state: present

- name: Copy test config file.
  ansible.builtin.copy:
    src: files/test.conf
    dest: "{{ apache_config_dir }}/test.conf"
  notify: restart apache

# - name: Copy a web page.
#   copy:
#     content: |
#       <html>
#       <head><title>Hello World!</title></head>
#       <body>Hello there</body>
#       </html>
#     dest: "/var/www/html/index.html"
#   notify: restart apache
#
# - name: Ensure apache is running and enabled at boot.
#   service:
#     name: "{{ apache_service }}"
#     state: started
#     enabled: true
#
# - name: Verify Apache is serving content.
#   uri:
#     url: http://localhost/
#     status_code: 200
#   register: apache_status
#   tags: verify
#
# - name: Verify Apache status.
#   debug:
#     var: apache_status.status
#   tags: verify


# Prepare system
- name: install dependencies
  package: "{{ default_packages }}"

- name: Joomla | Install php
  apt:
    pkg: ['php-pear', 'php-fpm', 'php-dev', 'php-zip', 'php-curl',
          'php-xmlrpc', 'php-gd', 'php-mysql', 'php-mbstring', 'php-xml']
    update_cache: yes
    cache_valid_time: 86400
    state: present


- name: check php version
  command: |
    php --version
  register: php_version

- name: print php_version
  debug:
    var: php_version.stdout

- name: Enable mod for apache2
  command: a2enmod {{item}}
  with_items:
    - rewrite
    - suexec
    - include
    # - fcgid
    # - suphp
    - headers
    - proxy
    - proxy_http
    - ssl
  tags:
    - joomla

# Creating Databases and users
- name: Template initial data
  template: src="{{item.path}}" dest="~/{{item.name}}"
  with_items:
    - "{{joomla_inject_sql_files}}"
  tags:
    - joomla
  when: joomla_inject_sql == true

- name: Template addAdmin.sql
  template: src=admin.sql dest="~/{{joomla_mysql_db_name}}_admin.sql"
  tags:
    - joomla

- name: Install PyMySQL
  ansible.builtin.pip:
    name: pymysql
    state: present
  tags:
    - joomla

- name: Ensure mysql is running and starts on boot
  service:
    name: mysql
    state: started
    enabled: yes

- name: Create root password protected user
  mysql_user:
    name: root
    host: "%"
    password: "{{ db_root_passwd }}"
    priv: '*.*:ALL,GRANT'
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: present

- name: create .my.cnf file under root
  template:
    src: "my.cnf.j2"
    dest: "/root/.my.cnf"
    owner: root
    mode: 600

- name: Create mysql joomla database
  mysql_db: encoding="utf8" login_user="root" login_password="{{joomla_mysql_root_passwd}}" name="{{joomla_mysql_db_name}}" state=present
  tags:
    - joomla

- name: Determine if import has already been done
  shell: mysql -e  'show tables;' {{joomla_mysql_db_name}}
  register: db_created
  changed_when: "( db_created.stdout.find('{{joomla_site_dbprefix}}') == -1 )"
  tags:
    - joomla

- debug: var=db_created
  tags:
    - joomla

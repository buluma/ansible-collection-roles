---
- name: Get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version

- name: Set systemd version fact
  ansible.builtin.set_fact:
    victoriametrics_systemd_version: "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"

- name: Check if VictoriaMetrics vmselect is installed
  ansible.builtin.stat:
    path: /usr/local/bin/victoriametrics/vmselect-prod
  changed_when: false
  check_mode: false
  register: victoriametrics_vmselect_is_installed
  when: inventory_hostname in groups['vmselect']

- name: Check if VictoriaMetrics vminsert is installed
  ansible.builtin.stat:
    path: /usr/local/bin/victoriametrics/vminsert-prod
  changed_when: false
  check_mode: false
  register: victoriametrics_vminsert_is_installed
  when: inventory_hostname in groups['vminsert']

- name: Check if VictoriaMetrics vmstorage is installed
  ansible.builtin.stat:
    path: /usr/local/bin/victoriametrics/vmstorage-prod
  changed_when: false
  check_mode: false
  register: victoriametrics_vmstorage_is_installed
  when: inventory_hostname in groups['vmstorage']

- name: Check current VictoriaMetrics vmselect version
  command: /usr/local/bin/victoriametrics/vmselect-prod -version
  changed_when: false
  failed_when: false
  check_mode: false
  register: victoriametrics_vmselect_current_version
  when:
    - inventory_hostname in groups['vmselect']
    - victoriametrics_vmselect_is_installed.stat.exists == True

- name: Check current VictoriaMetrics vminsert version
  command: /usr/local/bin/victoriametrics/vminsert-prod -version
  changed_when: false
  failed_when: false
  check_mode: false
  register: victoriametrics_vminsert_current_version
  when:
    - inventory_hostname in groups['vminsert']
    - victoriametrics_vminsert_is_installed.stat.exists == True

- name: Check current VictoriaMetrics vmstorage version
  command: /usr/local/bin/victoriametrics/vmstorage-prod -version
  changed_when: false
  failed_when: false
  check_mode: false
  register: victoriametrics_vmstorage_current_version
  when:
    - inventory_hostname in groups['vmstorage']
    - victoriametrics_vmstorage_is_installed.stat.exists == True

- name: Apply recommended sysctl settings
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: /etc/sysctl.d/99-custom_tune.conf
    reload: no
    # ignoreerrors: yes
  with_items: "{{ custom_sysctl }}"
  when: custom_sysctl is defined
  notify:
    - reload sysctl.conf

- name: Create VictoriaMetrics system group
  ansible.builtin.group:
    name: "{{ victoriametrics_system_group }}"
    state: present
    system: true
  when: victoriametrics_system_group != "root"

- name: Create VictoriaMetrics system user
  ansible.builtin.user:
    name: "{{ victoriametrics_system_user }}"
    groups: "{{ victoriametrics_system_group }}"
    append: true
    shell: /sbin/nologin
    system: true
    createhome: false
  when: victoriametrics_system_user != "root"

- name: configure /etc/security/limits.conf for {{ victoriametrics_system_user }} user
  community.general.pam_limits:
    domain: "{{ victoriametrics_system_user }}"
    limit_type: "{{ item.limit_type }}"
    limit_item: "{{ item.limit_item }}"
    value: "{{ item.value }}"
  loop:
    - { limit_type: 'soft', limit_item: 'nofile', value: 65536 }
    - { limit_type: 'hard', limit_item: 'nofile', value: 65536 }
    - { limit_type: 'soft', limit_item: 'nproc', value: 65536 }
    - { limit_type: 'hard', limit_item: 'nproc', value: 65536 }

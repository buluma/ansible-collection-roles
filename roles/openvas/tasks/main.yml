---
# tasks file for openvas
- name: install requirements (package)
  package:
    name: "{{ item.name }}"
    state: present
  with_items:
    - "{{ openvas_requirements }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.type == "package"
  register: openvas_install_requirements_package
  until: openvas_install_requirements_package is succeeded
  retries: 3

- name: install requirements (pip)
  pip:
    name: "{{ item.name }}"
    state: present
  with_items:
    - "{{ openvas_requirements }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.type == "pip"
  register: openvas_install_requirements_pip
  until: openvas_install_requirements_pip is succeeded
  retries: 3

# The GPG key can't be found (anymore) on keyserver.ubuntu.com
# - name: install repository key (apt)
#   apt_key:
#     keyserver: keyserver.ubuntu.com
#     id: FFBD5D0A4520AFA9
#     state: present
#   when:
#     - ansible_pkg_mgr == "apt"
#   register: openvas_install_repository_key_apt
#   until: openvas_install_repository_key_apt is succeeded
#   retries: 3

- name: install repository key (yum/dnf/zypper)
  rpm_key:
    key: https://www.atomicorp.com/RPM-GPG-KEY.art.txt
    state: present
  when:
    - ansible_pkg_mgr == "yum" or
      ansible_pkg_mgr == "dnf" or
      ansible_pkg_mgr == "zypper"
  register: openvas_install_repository_key_yum_dnf_zypper
  until: openvas_install_repository_key_yum_dnf_zypper is succeeded
  retries: 3

- name: install repository (yum/dnf/zypper)
  package:
    name: "{{ openvas_release }}"
    state: present
  when:
    - ansible_pkg_mgr == "yum" or
      ansible_pkg_mgr == "dnf" or
      ansible_pkg_mgr == "zypper"
    - ansible_distribution != "Fedora"
  register: openvas_install_repository_yum_dnf_zypper
  until: openvas_install_repository_yum_dnf_zypper is succeeded
  retries: 3

- name: install repository (apt)
  apt_repository:
    repo: "{{ openvas_release }}"
    state: present
  when:
    - ansible_pkg_mgr == "apt"

- name: include selinux role
  include_role:
    name: robertdebock.selinux
  vars:
    selinux_state: disabled

- name: flush handlers
  meta: flush_handlers

- name: install openvas (package)
  package:
    name: "{{ openvas_packages }}"
    state: present
    # allow_unauthenticated: yes
    disable_gpg_check: yes
  notify:
    - setup openvas
  register: openvas_install_openvas_package
  until: openvas_install_openvas_package is succeeded
  retries: 3

# - name: setup certificates
#   expect:
#     command: openvas-mkcert
#     responses:
#       'CA certificate life time in days \[1460\]: ': 1460
#       'Server certificate life time in days \[365\]: ': 365
#       'Your country \(two letter code\) \[DE\]: ': NL
#       'Your state or province name \[none\]: ': UTRECHT
#       'Your location \(e.g. town\) \[Berlin\]: ': Breukelen
#       'Your organization \[OpenVAS Users United\]: ': Very little
#       'Press \[ENTER\] to exit': okay
#     creates: /var/lib/openvas/CA/cacert.pem
#   environment:
#     TERM: linux

- name: flush handlers
  meta: flush_handlers

- name: enable openvas
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - "{{ openvas_services }}"
